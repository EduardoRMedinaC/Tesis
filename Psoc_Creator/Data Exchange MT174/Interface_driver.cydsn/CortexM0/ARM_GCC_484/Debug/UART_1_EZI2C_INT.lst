ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_EZI2C_STRETCH_ISR, %function
  23              	UART_1_EZI2C_STRETCH_ISR:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1_EZI2C_INT.c"
   1:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * File Name: UART_1_EZI2C_INT.c
   3:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** *
   5:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** *
   9:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** *
  11:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  18:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** #include "UART_1_PVT.h"
  19:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** #include "UART_1_EZI2C_PVT.h"
  20:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  21:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** #if(UART_1_EZI2C_SCL_STRETCH_ENABLE_CONST)
  22:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     /*******************************************************************************
  23:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Function Name: UART_1_EZI2C_STRETCH_ISR
  24:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     ********************************************************************************
  25:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
  26:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Summary:
  27:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. The clock stretching is
  28:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  used during operation.
  29:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
  30:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Parameters:
  31:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  None
  32:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 2


  33:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Return:
  34:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  None
  35:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
  36:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *******************************************************************************/
  37:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     CY_ISR_PROTO(UART_1_EZI2C_STRETCH_ISR)
  38:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  29              		.cfi_def_cfa_offset 24
  30              		.cfi_offset 3, -24
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36              	.LVL0:
  39:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         static uint16 locBufSize;
  40:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locIndex;
  41:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locStatus;
  42:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  43:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 endTransfer;
  44:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 fifoIndex;
  45:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locByte;
  46:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  47:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locIntrCause;
  48:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locIntrSlave;
  49:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  50:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #if(UART_1_SECONDARY_ADDRESS_ENABLE_CONST)
  51:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  52:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         static volatile uint8 * UART_1_dataBuffer; /* Pointer to data buffer              */
  53:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         static uint16 UART_1_bufSizeBuf;           /* Size of buffer in bytes             */
  54:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         static uint16 UART_1_protectBuf;           /* Start index of write protected area */
  55:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  56:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         static uint8 activeAddress;
  57:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 ackResponse;
  58:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  59:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         ackResponse = UART_1_EZI2C_ACK_RECEIVED_ADDRESS;
  60:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #endif /* (UART_1_SECONDARY_ADDRESS_ENABLE_CONST) */
  61:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  62:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
  63:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         if(NULL != UART_1_customIntrHandler)
  37              		.loc 1 63 0
  38 0002 C24B     		ldr	r3, .L64
  39 0004 1B68     		ldr	r3, [r3]
  40 0006 002B     		cmp	r3, #0
  41 0008 00D0     		beq	.L2
  64:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         {
  65:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_customIntrHandler();
  42              		.loc 1 65 0
  43 000a 9847     		blx	r3
  44              	.LVL1:
  45              	.L2:
  66:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         }
  67:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #else
  68:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         CY_UART_1_CUSTOM_INTR_HANDLER();
  69:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 3


  70:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  71:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Make local copy of global variable */
  72:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locIndex = UART_1_EZI2C_GET_INDEX(activeAddress);
  46              		.loc 1 72 0
  47 000c C04B     		ldr	r3, .L64+4
  48 000e 1B78     		ldrb	r3, [r3]
  49 0010 002B     		cmp	r3, #0
  50 0012 02D1     		bne	.L3
  51              		.loc 1 72 0 is_stmt 0 discriminator 1
  52 0014 BF4B     		ldr	r3, .L64+8
  53 0016 1C88     		ldrh	r4, [r3]
  54 0018 01E0     		b	.L4
  55              	.L3:
  56              		.loc 1 72 0 discriminator 2
  57 001a BF4B     		ldr	r3, .L64+12
  58 001c 1C88     		ldrh	r4, [r3]
  59              	.L4:
  60              	.LVL2:
  73:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  74:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Get interrupt sources */
  75:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locIntrSlave = UART_1_GetSlaveInterruptSource();
  61              		.loc 1 75 0 is_stmt 1 discriminator 3
  62 001e BF4B     		ldr	r3, .L64+16
  63 0020 1D68     		ldr	r5, [r3]
  64              	.LVL3:
  76:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locIntrCause = UART_1_GetInterruptCause();
  65              		.loc 1 76 0 discriminator 3
  66 0022 BF4B     		ldr	r3, .L64+20
  67 0024 1E68     		ldr	r6, [r3]
  68              	.LVL4:
  77:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  78:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  79:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  80:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  81:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         */
  82:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         if(0u != (locIntrSlave & (UART_1_INTR_SLAVE_I2C_ARB_LOST |
  69              		.loc 1 82 0 discriminator 3
  70 0026 0223     		mov	r3, #2
  71 0028 FF33     		add	r3, r3, #255
  72 002a 1D42     		tst	r5, r3
  73 002c 46D0     		beq	.L5
  83:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                   UART_1_INTR_SLAVE_I2C_BUS_ERROR)))
  84:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         {
  85:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_CTRL_REG &= (uint32) ~UART_1_CTRL_ENABLED; /* Disable SCB block */
  74              		.loc 1 85 0
  75 002e BD4B     		ldr	r3, .L64+24
  76 0030 1A68     		ldr	r2, [r3]
  77 0032 5200     		lsl	r2, r2, #1
  78 0034 5208     		lsr	r2, r2, #1
  79 0036 1A60     		str	r2, [r3]
  86:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  87:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #if(UART_1_CY_SCBIP_V0)
  88:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != ((uint8) UART_1_EZI2C_STATUS_BUSY & UART_1_curStatus))
  80              		.loc 1 88 0
  81 0038 BB4B     		ldr	r3, .L64+28
  82 003a 1B78     		ldrb	r3, [r3]
  83 003c 9806     		lsl	r0, r3, #26
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 4


  84 003e 1DD5     		bpl	.L6
  89:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #endif /* (UART_1_CY_SCBIP_V0) */
  90:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
  91:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_curStatus &= (uint8) ~UART_1_EZI2C_STATUS_BUSY;
  85              		.loc 1 91 0
  86 0040 B94B     		ldr	r3, .L64+28
  87 0042 1A78     		ldrb	r2, [r3]
  88 0044 2021     		mov	r1, #32
  89 0046 8A43     		bic	r2, r1
  90 0048 1A70     		strb	r2, [r3]
  92:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_curStatus |= (uint8)  UART_1_EZI2C_STATUS_ERR;
  91              		.loc 1 92 0
  92 004a 1978     		ldrb	r1, [r3]
  93 004c 1022     		mov	r2, #16
  94 004e 0A43     		orr	r2, r1
  95 0050 1A70     		strb	r2, [r3]
  93:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
  94:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  95:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(0u == (UART_1_GetTxInterruptMode() & UART_1_INTR_TX_EMPTY))
  96              		.loc 1 95 0
  97 0052 B64B     		ldr	r3, .L64+32
  98 0054 1B68     		ldr	r3, [r3]
  99 0056 D906     		lsl	r1, r3, #27
 100 0058 0BD4     		bmi	.L7
  96:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
  97:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Write complete */
  98:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_indexBuf1 != UART_1_offsetBuf1)
 101              		.loc 1 98 0
 102 005a AE4B     		ldr	r3, .L64+8
 103 005c 1A88     		ldrh	r2, [r3]
 104 005e B44B     		ldr	r3, .L64+36
 105 0060 1B88     		ldrh	r3, [r3]
 106 0062 9A42     		cmp	r2, r3
 107 0064 0AD0     		beq	.L6
  99:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 100:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_curStatus |= (uint8) UART_1_INTR_SLAVE_I2C_WRITE_STOP;
 108              		.loc 1 100 0
 109 0066 B04B     		ldr	r3, .L64+28
 110 0068 1978     		ldrb	r1, [r3]
 111 006a 0822     		mov	r2, #8
 112 006c 0A43     		orr	r2, r1
 113 006e 1A70     		strb	r2, [r3]
 114 0070 04E0     		b	.L6
 115              	.L7:
 101:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 102:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 103:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 else
 104:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 105:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Read complete */
 106:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_curStatus |= (uint8) UART_1_INTR_SLAVE_I2C_NACK;
 116              		.loc 1 106 0
 117 0072 AD4B     		ldr	r3, .L64+28
 118 0074 1978     		ldrb	r1, [r3]
 119 0076 0222     		mov	r2, #2
 120 0078 0A43     		orr	r2, r1
 121 007a 1A70     		strb	r2, [r3]
 122              	.L6:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 5


 107:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 108:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 109:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 110:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_DISABLE_SLAVE_AUTO_DATA;
 123              		.loc 1 110 0
 124 007c AD4B     		ldr	r3, .L64+40
 125 007e 1968     		ldr	r1, [r3]
 126 0080 AD4A     		ldr	r2, .L64+44
 127 0082 0A40     		and	r2, r1
 128 0084 1A60     		str	r2, [r3]
 111:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 112:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 113:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_SetRxInterruptMode(UART_1_NO_INTR_SOURCES);
 129              		.loc 1 113 0
 130 0086 0023     		mov	r3, #0
 131 0088 AC4A     		ldr	r2, .L64+48
 132 008a 1360     		str	r3, [r2]
 114:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 133              		.loc 1 114 0
 134 008c A74A     		ldr	r2, .L64+32
 135 008e 1360     		str	r3, [r2]
 115:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 116:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #if(UART_1_CY_SCBIP_V0)
 117:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 118:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ALL);
 136              		.loc 1 118 0
 137 0090 AB4A     		ldr	r2, .L64+52
 138 0092 AC4B     		ldr	r3, .L64+56
 139 0094 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_ClearSlaveInterruptSource(UART_1_INTR_SLAVE_ALL);
 140              		.loc 1 119 0
 141 0096 AC4A     		ldr	r2, .L64+60
 142 0098 A04B     		ldr	r3, .L64+16
 143 009a 1A60     		str	r2, [r3]
 120:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #endif /* (UART_1_CY_SCBIP_V0) */
 121:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 122:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_fsmState = UART_1_EZI2C_FSM_IDLE;
 144              		.loc 1 122 0
 145 009c AB4B     		ldr	r3, .L64+64
 146 009e 1B78     		ldrb	r3, [r3]
 147 00a0 002B     		cmp	r3, #0
 148 00a2 01D0     		beq	.L53
 149 00a4 0222     		mov	r2, #2
 150 00a6 00E0     		b	.L8
 151              	.L53:
 152 00a8 0022     		mov	r2, #0
 153              	.L8:
 154              		.loc 1 122 0 is_stmt 0 discriminator 1
 155 00aa A94B     		ldr	r3, .L64+68
 156 00ac 1A70     		strb	r2, [r3]
 123:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 124:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_CTRL_REG |= (uint32) UART_1_CTRL_ENABLED;  /* Enable SCB block */
 157              		.loc 1 124 0 is_stmt 1 discriminator 1
 158 00ae 9D4B     		ldr	r3, .L64+24
 159 00b0 1968     		ldr	r1, [r3]
 160 00b2 8022     		mov	r2, #128
 161 00b4 1206     		lsl	r2, r2, #24
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 6


 162 00b6 0A43     		orr	r2, r1
 163 00b8 1A60     		str	r2, [r3]
 164 00ba E5E1     		b	.L9
 165              	.L5:
 125:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         }
 126:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         else
 127:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         {
 128:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 129:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 130:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrCause & UART_1_INTR_CAUSE_I2C_EC))
 166              		.loc 1 130 0
 167 00bc F206     		lsl	r2, r6, #27
 168 00be 02D5     		bpl	.L10
 131:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 132:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 133:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_SetI2CExtClkInterruptMode(UART_1_NO_INTR_SOURCES);
 169              		.loc 1 133 0
 170 00c0 0022     		mov	r2, #0
 171 00c2 A44B     		ldr	r3, .L64+72
 172 00c4 1A60     		str	r2, [r3]
 173              	.L10:
 134:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 135:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 136:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrCause & (UART_1_INTR_CAUSE_RX | UART_1_INTR_CAUSE_SLAVE)))
 174              		.loc 1 136 0
 175 00c6 0A23     		mov	r3, #10
 176 00c8 3342     		tst	r3, r6
 177 00ca 00D1     		bne	.LCB157
 178 00cc C7E0     		b	.L11	@long jump
 179              	.LCB157:
 137:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 138:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 139:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 140:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if (0u != (UART_1_GetRxInterruptSourceMasked() & UART_1_INTR_RX_NOT_EMPTY))
 180              		.loc 1 140 0
 181 00ce A24B     		ldr	r3, .L64+76
 182 00d0 1B68     		ldr	r3, [r3]
 183 00d2 5F07     		lsl	r7, r3, #29
 184 00d4 75D5     		bpl	.L12
 141:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 142:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 #if(UART_1_SECONDARY_ADDRESS_ENABLE_CONST)
 143:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 144:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 145:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 146:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     */
 147:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if (0u == (locIntrCause & UART_1_INTR_CAUSE_SLAVE))
 185              		.loc 1 147 0
 186 00d6 B007     		lsl	r0, r6, #30
 187 00d8 00D5     		bpl	.LCB167
 188 00da C0E0     		b	.L11	@long jump
 189              	.LCB167:
 148:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 #endif /* (UART_1_SECONDARY_ADDRESS_ENABLE_CONST) */
 149:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 150:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locByte = UART_1_RX_FIFO_RD_REG;
 190              		.loc 1 150 0
 191 00dc 9F4B     		ldr	r3, .L64+80
 192 00de 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 7


 193              	.LVL5:
 151:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 152:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         switch(UART_1_fsmState)
 194              		.loc 1 152 0
 195 00e0 9B4B     		ldr	r3, .L64+68
 196 00e2 1B78     		ldrb	r3, [r3]
 197 00e4 012B     		cmp	r3, #1
 198 00e6 04D0     		beq	.L14
 199 00e8 002B     		cmp	r3, #0
 200 00ea 20D0     		beq	.L15
 201 00ec 022B     		cmp	r3, #2
 202 00ee 14D0     		beq	.L16
 203 00f0 60E0     		b	.L62
 204              	.L14:
 153:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 154:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         case UART_1_EZI2C_FSM_BYTE_WRITE:
 155:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             if(0u != locBufSize)
 205              		.loc 1 155 0
 206 00f2 874B     		ldr	r3, .L64+4
 207 00f4 5B88     		ldrh	r3, [r3, #2]
 208 00f6 002B     		cmp	r3, #0
 209 00f8 0CD0     		beq	.L17
 156:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             {
 157:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 158:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 UART_1_I2C_SLAVE_GENERATE_ACK;
 210              		.loc 1 158 0
 211 00fa 0121     		mov	r1, #1
 212 00fc 984B     		ldr	r3, .L64+84
 213 00fe 1960     		str	r1, [r3]
 159:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 160:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 UART_1_dataBuffer[locIndex] = (uint8) locByte;
 214              		.loc 1 160 0
 215 0100 834B     		ldr	r3, .L64+4
 216 0102 5F68     		ldr	r7, [r3, #4]
 217 0104 3919     		add	r1, r7, r4
 218 0106 D2B2     		uxtb	r2, r2
 219              	.LVL6:
 220 0108 0A70     		strb	r2, [r1]
 161:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locIndex++;
 221              		.loc 1 161 0
 222 010a 0134     		add	r4, r4, #1
 223              	.LVL7:
 162:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locBufSize--;
 224              		.loc 1 162 0
 225 010c 5A88     		ldrh	r2, [r3, #2]
 226 010e 013A     		sub	r2, r2, #1
 227 0110 5A80     		strh	r2, [r3, #2]
 228 0112 52E0     		b	.L18
 229              	.LVL8:
 230              	.L17:
 163:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             }
 164:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             else
 165:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             {
 166:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 167:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 UART_1_I2C_SLAVE_GENERATE_NACK;
 231              		.loc 1 167 0
 232 0114 FFF7FEFF 		bl	UART_1_I2CSlaveNackGeneration
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 8


 233              	.LVL9:
 234 0118 4FE0     		b	.L18
 235              	.LVL10:
 236              	.L16:
 168:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             }
 169:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             break;
 170:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 171:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #if(UART_1_SUB_ADDRESS_SIZE16_CONST)
 172:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         case UART_1_EZI2C_FSM_OFFSET_HI8:
 173:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 174:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_I2C_SLAVE_GENERATE_ACK;
 237              		.loc 1 174 0
 238 011a 0121     		mov	r1, #1
 239 011c 904B     		ldr	r3, .L64+84
 240 011e 1960     		str	r1, [r3]
 175:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 176:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Store offset most significant byre */
 177:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 241              		.loc 1 177 0
 242 0120 D2B2     		uxtb	r2, r2
 243              	.LVL11:
 244 0122 7B4B     		ldr	r3, .L64+4
 245 0124 5A80     		strh	r2, [r3, #2]
 178:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 179:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_fsmState = UART_1_EZI2C_FSM_OFFSET_LO8;
 246              		.loc 1 179 0
 247 0126 0022     		mov	r2, #0
 248 0128 894B     		ldr	r3, .L64+68
 249 012a 1A70     		strb	r2, [r3]
 180:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 181:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             break;
 250              		.loc 1 181 0
 251 012c 45E0     		b	.L18
 252              	.LVL12:
 253              	.L15:
 182:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #endif /* (UART_1_SUB_ADDRESS_SIZE16_CONST) */
 183:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 184:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         case UART_1_EZI2C_FSM_OFFSET_LO8:
 185:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 186:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             if (UART_1_SUB_ADDRESS_SIZE16)
 254              		.loc 1 186 0
 255 012e 874B     		ldr	r3, .L64+64
 256 0130 1B78     		ldrb	r3, [r3]
 257 0132 002B     		cmp	r3, #0
 258 0134 03D0     		beq	.L19
 187:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             {
 188:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 189:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 259              		.loc 1 189 0
 260 0136 764B     		ldr	r3, .L64+4
 261 0138 5B88     		ldrh	r3, [r3, #2]
 262 013a 1B02     		lsl	r3, r3, #8
 263 013c 1A43     		orr	r2, r3
 264              	.LVL13:
 265              	.L19:
 190:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             }
 191:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 9


 192:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 193:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Check offset against buffer size */
 194:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             if(locByte < (uint32) UART_1_bufSizeBuf)
 266              		.loc 1 194 0
 267 013e 744B     		ldr	r3, .L64+4
 268 0140 1B89     		ldrh	r3, [r3, #8]
 269 0142 9342     		cmp	r3, r2
 270 0144 33D9     		bls	.L20
 195:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             {
 196:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 UART_1_I2C_SLAVE_GENERATE_ACK;
 271              		.loc 1 196 0
 272 0146 0121     		mov	r1, #1
 273 0148 854B     		ldr	r3, .L64+84
 274 014a 1960     		str	r1, [r3]
 275              	.LVL14:
 197:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 198:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 199:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locIndex = locByte;
 200:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 201:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 202:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < UART_1_protectBuf) ?
 276              		.loc 1 202 0
 277 014c 704B     		ldr	r3, .L64+4
 278 014e 5B89     		ldrh	r3, [r3, #10]
 279 0150 9342     		cmp	r3, r2
 280 0152 02D9     		bls	.L54
 281              		.loc 1 202 0 is_stmt 0 discriminator 1
 282 0154 9B1A     		sub	r3, r3, r2
 283 0156 9BB2     		uxth	r3, r3
 284 0158 00E0     		b	.L21
 285              	.L54:
 286              		.loc 1 202 0
 287 015a 0023     		mov	r3, #0
 288              	.L21:
 289              		.loc 1 202 0 discriminator 3
 290 015c 6C49     		ldr	r1, .L64+4
 291 015e 4B80     		strh	r3, [r1, #2]
 203:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                                        (UART_1_protectBuf - locByte) : (0u));
 204:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 205:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             #if(UART_1_CY_SCBIP_V0)
 206:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 207:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 if(locBufSize < UART_1_EZI2C_FIFO_SIZE)
 292              		.loc 1 207 0 is_stmt 1 discriminator 3
 293 0160 072B     		cmp	r3, #7
 294 0162 03D8     		bhi	.L22
 208:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 {
 209:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 210:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     UART_1_fsmState = UART_1_EZI2C_FSM_BYTE_WRITE;
 295              		.loc 1 210 0
 296 0164 0121     		mov	r1, #1
 297 0166 7A4B     		ldr	r3, .L64+68
 298 0168 1970     		strb	r1, [r3]
 299 016a 14E0     		b	.L23
 300              	.L22:
 211:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 }
 212:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 213:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 else if(locBufSize == UART_1_EZI2C_FIFO_SIZE)
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 10


 301              		.loc 1 213 0
 302 016c 082B     		cmp	r3, #8
 303 016e 09D1     		bne	.L24
 214:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 {
 215:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     UART_1_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 304              		.loc 1 215 0
 305 0170 704B     		ldr	r3, .L64+40
 306 0172 1868     		ldr	r0, [r3]
 307 0174 A021     		mov	r1, #160
 308 0176 0902     		lsl	r1, r1, #8
 309 0178 0143     		orr	r1, r0
 310 017a 1960     		str	r1, [r3]
 216:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     UART_1_SetRxInterruptMode(UART_1_NO_INTR_SOURCES);
 311              		.loc 1 216 0
 312 017c 0021     		mov	r1, #0
 313 017e 6F4B     		ldr	r3, .L64+48
 314 0180 1960     		str	r1, [r3]
 315 0182 08E0     		b	.L23
 316              	.L24:
 217:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 }
 218:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 else
 219:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 {
 220:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     UART_1_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is f
 317              		.loc 1 220 0
 318 0184 6B4B     		ldr	r3, .L64+40
 319 0186 1868     		ldr	r0, [r3]
 320 0188 8021     		mov	r1, #128
 321 018a 8901     		lsl	r1, r1, #6
 322 018c 0143     		orr	r1, r0
 323 018e 1960     		str	r1, [r3]
 221:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     UART_1_SetRxInterruptMode(UART_1_INTR_RX_FULL);
 324              		.loc 1 221 0
 325 0190 0821     		mov	r1, #8
 326 0192 6A4B     		ldr	r3, .L64+48
 327 0194 1960     		str	r1, [r3]
 328              	.L23:
 222:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 }
 223:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 224:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             #else
 225:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 226:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 if(UART_1_SECONDARY_ADDRESS_ENABLE)
 227:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 {
 228:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 229:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 230:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     */
 231:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     UART_1_fsmState = UART_1_EZI2C_FSM_BYTE_WRITE;
 232:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 }
 233:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 else
 234:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 {
 235:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     if (locBufSize < UART_1_EZI2C_FIFO_SIZE)
 236:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     {
 237:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 238:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                         UART_1_fsmState = UART_1_EZI2C_FSM_BYTE_WRITE;
 239:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     }
 240:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 241:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     else if (locBufSize == UART_1_EZI2C_FIFO_SIZE)
 242:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     {
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 11


 243:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                         UART_1_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full
 244:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                         UART_1_SetRxInterruptMode(UART_1_NO_INTR_SOURCES);
 245:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     }
 246:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     else
 247:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     {
 248:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                         UART_1_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO 
 249:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                         UART_1_SetRxInterruptMode(UART_1_INTR_RX_FULL);
 250:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                     }
 251:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 }
 252:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 
 253:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 254:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             #endif /* (UART_1_CY_SCBIP_V0) */
 255:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 256:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 257:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 UART_1_EZI2C_SET_OFFSET(activeAddress, locIndex);
 329              		.loc 1 257 0
 330 0196 5E4B     		ldr	r3, .L64+4
 331 0198 1B78     		ldrb	r3, [r3]
 332 019a 002B     		cmp	r3, #0
 333 019c 03D1     		bne	.L25
 334              		.loc 1 257 0 is_stmt 0 discriminator 1
 335 019e 644B     		ldr	r3, .L64+36
 336 01a0 1A80     		strh	r2, [r3]
 199:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locIndex = locByte;
 337              		.loc 1 199 0 is_stmt 1 discriminator 1
 338 01a2 141C     		mov	r4, r2
 339 01a4 09E0     		b	.L18
 340              	.L25:
 341              		.loc 1 257 0 discriminator 2
 342 01a6 6F4B     		ldr	r3, .L64+88
 343 01a8 1A80     		strh	r2, [r3]
 199:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 locIndex = locByte;
 344              		.loc 1 199 0 discriminator 2
 345 01aa 141C     		mov	r4, r2
 346 01ac 05E0     		b	.L18
 347              	.LVL15:
 348              	.L20:
 258:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             }
 259:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             else
 260:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             {
 261:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 262:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 UART_1_I2C_SLAVE_GENERATE_NACK;
 349              		.loc 1 262 0
 350 01ae FFF7FEFF 		bl	UART_1_I2CSlaveNackGeneration
 351              	.LVL16:
 352 01b2 02E0     		b	.L18
 353              	.LVL17:
 354              	.L62:
 263:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             }
 264:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             break;
 265:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 266:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         default:
 267:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 355              		.loc 1 267 0 discriminator 1
 356 01b4 0020     		mov	r0, #0
 357 01b6 FFF7FEFF 		bl	CyHalt
 358              	.LVL18:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 12


 359              	.L18:
 268:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             break;
 269:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 270:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 271:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearRxInterruptSource(UART_1_INTR_RX_NOT_EMPTY);
 360              		.loc 1 271 0
 361 01ba 0422     		mov	r2, #4
 362 01bc 614B     		ldr	r3, .L64+56
 363 01be 1A60     		str	r2, [r3]
 364 01c0 4DE0     		b	.L11
 365              	.L12:
 272:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 273:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 274:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 275:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 276:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 else if (0u != (UART_1_I2C_CTRL_REG & UART_1_I2C_CTRL_S_READY_DATA_ACK))
 366              		.loc 1 276 0
 367 01c2 5C4B     		ldr	r3, .L64+40
 368 01c4 1B68     		ldr	r3, [r3]
 369 01c6 9804     		lsl	r0, r3, #18
 370 01c8 49D5     		bpl	.L11
 277:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 278:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 279:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 280:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 281:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     */
 282:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(0u != (locIntrCause & UART_1_INTR_CAUSE_SLAVE))
 371              		.loc 1 282 0
 372 01ca B107     		lsl	r1, r6, #30
 373 01cc 22D5     		bpl	.L26
 283:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 284:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 285:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         fifoIndex = UART_1_GET_RX_FIFO_ENTRIES;
 374              		.loc 1 285 0
 375 01ce 664B     		ldr	r3, .L64+92
 376 01d0 1B68     		ldr	r3, [r3]
 377 01d2 0F22     		mov	r2, #15
 378 01d4 1340     		and	r3, r2
 379              	.LVL19:
 286:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 287:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         if(UART_1_SECONDARY_ADDRESS_ENABLE)
 380              		.loc 1 287 0
 381 01d6 654A     		ldr	r2, .L64+96
 382 01d8 1278     		ldrb	r2, [r2]
 383 01da 002A     		cmp	r2, #0
 384 01dc 0ED0     		beq	.L27
 288:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 289:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Update with current address match */
 290:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             if(UART_1_CHECK_INTR_SLAVE_MASKED(UART_1_INTR_SLAVE_I2C_ADDR_MATCH))
 385              		.loc 1 290 0
 386 01de 644A     		ldr	r2, .L64+100
 387 01e0 1268     		ldr	r2, [r2]
 388 01e2 5706     		lsl	r7, r2, #25
 389 01e4 0AD5     		bpl	.L27
 291:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             {
 292:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 293:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 fifoIndex = UART_1_GET_RX_FIFO_ENTRIES;
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 13


 390              		.loc 1 293 0
 391 01e6 604A     		ldr	r2, .L64+92
 392 01e8 1368     		ldr	r3, [r2]
 393              	.LVL20:
 394 01ea 0F21     		mov	r1, #15
 395 01ec 1940     		and	r1, r3
 396              	.LVL21:
 294:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 295:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 296:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 297:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 298:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 */
 299:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                 fifoIndex -= ((0u != UART_1_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 397              		.loc 1 299 0
 398 01ee 1268     		ldr	r2, [r2]
 399 01f0 8023     		mov	r3, #128
 400 01f2 1B02     		lsl	r3, r3, #8
 401 01f4 1340     		and	r3, r2
 402 01f6 5A42     		neg	r2, r3
 403 01f8 5341     		adc	r3, r3, r2
 404 01fa CB1A     		sub	r3, r1, r3
 405              	.LVL22:
 406              	.L27:
 300:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             }
 301:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 302:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         
 303:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 304:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_DISABLE_SLAVE_AUTO_DATA;
 407              		.loc 1 304 0
 408 01fc 4D4A     		ldr	r2, .L64+40
 409 01fe 1068     		ldr	r0, [r2]
 410 0200 4D49     		ldr	r1, .L64+44
 411 0202 0140     		and	r1, r0
 412 0204 1160     		str	r1, [r2]
 413              	.LVL23:
 305:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         endTransfer = UART_1_EZI2C_CONTINUE_TRANSFER;
 414              		.loc 1 305 0
 415 0206 0120     		mov	r0, #1
 416 0208 8446     		mov	ip, r0
 417 020a 15E0     		b	.L28
 418              	.LVL24:
 419              	.L55:
 306:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 307:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     else
 308:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 309:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 310:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 311:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 312:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locBufSize -= (uint16) UART_1_EZI2C_FIFO_SIZE;
 313:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 314:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         if(locBufSize <= UART_1_EZI2C_FIFO_SIZE)
 315:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 316:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 317:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 318:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             endTransfer = UART_1_EZI2C_COMPLETE_TRANSFER;
 319:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 320:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         else
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 14


 321:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 322:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Continue  transaction */
 323:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             fifoIndex   = UART_1_EZI2C_FIFO_SIZE;
 420              		.loc 1 323 0
 421 020c 0823     		mov	r3, #8
 324:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             endTransfer = UART_1_EZI2C_CONTINUE_TRANSFER;
 422              		.loc 1 324 0
 423 020e 0121     		mov	r1, #1
 424 0210 8C46     		mov	ip, r1
 425 0212 11E0     		b	.L28
 426              	.L26:
 312:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locBufSize -= (uint16) UART_1_EZI2C_FIFO_SIZE;
 427              		.loc 1 312 0
 428 0214 3E4A     		ldr	r2, .L64+4
 429 0216 5388     		ldrh	r3, [r2, #2]
 430 0218 083B     		sub	r3, r3, #8
 431 021a 9BB2     		uxth	r3, r3
 432 021c 5380     		strh	r3, [r2, #2]
 314:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         if(locBufSize <= UART_1_EZI2C_FIFO_SIZE)
 433              		.loc 1 314 0
 434 021e 082B     		cmp	r3, #8
 435 0220 F4D8     		bhi	.L55
 436              	.LVL25:
 318:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             endTransfer = UART_1_EZI2C_COMPLETE_TRANSFER;
 437              		.loc 1 318 0
 438 0222 0022     		mov	r2, #0
 439 0224 9446     		mov	ip, r2
 440 0226 07E0     		b	.L28
 441              	.LVL26:
 442              	.L30:
 325:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 326:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 327:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 328:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 329:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 330:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Store data in buffer */
 331:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_dataBuffer[locIndex] = (uint8) UART_1_RX_FIFO_RD_REG;
 443              		.loc 1 331 0 discriminator 2
 444 0228 7968     		ldr	r1, [r7, #4]
 445 022a 0A19     		add	r2, r1, r4
 446 022c 0168     		ldr	r1, [r0]
 447 022e C9B2     		uxtb	r1, r1
 448 0230 1170     		strb	r1, [r2]
 332:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locIndex++;
 449              		.loc 1 332 0 discriminator 2
 450 0232 0134     		add	r4, r4, #1
 451              	.LVL27:
 328:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 452              		.loc 1 328 0 discriminator 2
 453 0234 013B     		sub	r3, r3, #1
 454              	.LVL28:
 455 0236 01E0     		b	.L63
 456              	.LVL29:
 457              	.L28:
 331:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_dataBuffer[locIndex] = (uint8) UART_1_RX_FIFO_RD_REG;
 458              		.loc 1 331 0 discriminator 1
 459 0238 354F     		ldr	r7, .L64+4
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 15


 460 023a 4848     		ldr	r0, .L64+80
 461              	.L63:
 462              	.LVL30:
 328:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 463              		.loc 1 328 0 discriminator 1
 464 023c 002B     		cmp	r3, #0
 465 023e F3D1     		bne	.L30
 333:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 334:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 335:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 336:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_EZI2C_COMPLETE_TRANSFER == endTransfer)
 466              		.loc 1 336 0
 467 0240 6246     		mov	r2, ip
 468 0242 002A     		cmp	r2, #0
 469 0244 08D1     		bne	.L31
 337:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 338:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ENABLE_SLAVE_AUTO_DATA_NACK;
 470              		.loc 1 338 0
 471 0246 3B4B     		ldr	r3, .L64+40
 472              	.LVL31:
 473 0248 1968     		ldr	r1, [r3]
 474 024a 8022     		mov	r2, #128
 475 024c 1202     		lsl	r2, r2, #8
 476 024e 0A43     		orr	r2, r1
 477 0250 1A60     		str	r2, [r3]
 339:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 340:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 341:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_SetRxInterruptMode(UART_1_NO_INTR_SOURCES);
 478              		.loc 1 341 0
 479 0252 0022     		mov	r2, #0
 480 0254 394B     		ldr	r3, .L64+48
 481 0256 1A60     		str	r2, [r3]
 482              	.L31:
 342:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 343:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 344:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_ClearRxInterruptSource(UART_1_INTR_RX_FULL |
 483              		.loc 1 344 0
 484 0258 0C22     		mov	r2, #12
 485 025a 3A4B     		ldr	r3, .L64+56
 486 025c 1A60     		str	r2, [r3]
 487              	.LVL32:
 488              	.L11:
 345:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                                             UART_1_INTR_RX_NOT_EMPTY);
 346:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 347:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 else
 348:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 349:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 350:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 351:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     */
 352:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 353:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 354:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 355:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrCause & UART_1_INTR_CAUSE_SLAVE))
 489              		.loc 1 355 0
 490 025e B307     		lsl	r3, r6, #30
 491 0260 00D4     		bmi	.LCB494
 492 0262 F0E0     		b	.L32	@long jump
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 16


 493              	.LCB494:
 356:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 357:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 358:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 359:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #if(!UART_1_SECONDARY_ADDRESS_ENABLE_CONST)
 360:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_STOP))
 361:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #else
 362:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 363:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if((0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_STOP)) &&
 494              		.loc 1 363 0
 495 0264 EF06     		lsl	r7, r5, #27
 496 0266 32D5     		bpl	.L33
 364:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                    (0u != ((uint8) UART_1_EZI2C_STATUS_BUSY & UART_1_curStatus)))
 497              		.loc 1 364 0 discriminator 1
 498 0268 2F4B     		ldr	r3, .L64+28
 499 026a 1B78     		ldrb	r3, [r3]
 363:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if((0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_STOP)) &&
 500              		.loc 1 363 0 discriminator 1
 501 026c 9806     		lsl	r0, r3, #26
 502 026e 2ED5     		bpl	.L33
 365:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #endif
 366:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 367:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 368:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_SetRxInterruptMode(UART_1_NO_INTR_SOURCES);
 503              		.loc 1 368 0
 504 0270 0023     		mov	r3, #0
 505 0272 324A     		ldr	r2, .L64+48
 506 0274 1360     		str	r3, [r2]
 369:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 507              		.loc 1 369 0
 508 0276 2D4A     		ldr	r2, .L64+32
 509 0278 1360     		str	r3, [r2]
 510              	.LVL33:
 370:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 371:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Set read completion mask */
 372:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locStatus = UART_1_INTR_SLAVE_I2C_NACK;
 373:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 374:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 375:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(locIndex != UART_1_EZI2C_GET_OFFSET(activeAddress))
 511              		.loc 1 375 0
 512 027a 254B     		ldr	r3, .L64+4
 513 027c 1B78     		ldrb	r3, [r3]
 514 027e 002B     		cmp	r3, #0
 515 0280 02D1     		bne	.L34
 516              		.loc 1 375 0 is_stmt 0 discriminator 1
 517 0282 2B4A     		ldr	r2, .L64+36
 518 0284 1288     		ldrh	r2, [r2]
 519 0286 01E0     		b	.L35
 520              	.L34:
 521              		.loc 1 375 0 discriminator 2
 522 0288 364A     		ldr	r2, .L64+88
 523 028a 1288     		ldrh	r2, [r2]
 524              	.L35:
 525              		.loc 1 375 0 discriminator 3
 526 028c A242     		cmp	r2, r4
 527 028e 01D1     		bne	.L56
 372:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locStatus = UART_1_INTR_SLAVE_I2C_NACK;
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 17


 528              		.loc 1 372 0 is_stmt 1
 529 0290 0221     		mov	r1, #2
 530 0292 00E0     		b	.L36
 531              	.L56:
 376:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 377:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locStatus |= UART_1_INTR_SLAVE_I2C_WRITE_STOP;
 532              		.loc 1 377 0
 533 0294 0A21     		mov	r1, #10
 534              	.L36:
 535              	.LVL34:
 378:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 379:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 380:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Complete read or write transaction */
 381:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 536              		.loc 1 381 0
 537 0296 2940     		and	r1, r5
 538              	.LVL35:
 382:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 539              		.loc 1 382 0
 540 0298 D940     		lsr	r1, r1, r3
 541              	.LVL36:
 383:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locStatus |= (uint32)  UART_1_curStatus;
 542              		.loc 1 383 0
 543 029a 234A     		ldr	r2, .L64+28
 544 029c 1078     		ldrb	r0, [r2]
 545 029e 0143     		orr	r1, r0
 546              	.LVL37:
 384:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locStatus &= (uint32) ~UART_1_EZI2C_STATUS_BUSY;
 547              		.loc 1 384 0
 548 02a0 DF20     		mov	r0, #223
 549              	.LVL38:
 385:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_curStatus = (uint8) locStatus;
 550              		.loc 1 385 0
 551 02a2 0140     		and	r1, r0
 552              	.LVL39:
 553 02a4 1170     		strb	r1, [r2]
 386:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 387:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_fsmState = UART_1_EZI2C_FSM_IDLE;
 554              		.loc 1 387 0
 555 02a6 294A     		ldr	r2, .L64+64
 556 02a8 1278     		ldrb	r2, [r2]
 557 02aa 002A     		cmp	r2, #0
 558 02ac 01D0     		beq	.L57
 559 02ae 0221     		mov	r1, #2
 560 02b0 00E0     		b	.L37
 561              	.L57:
 562 02b2 0021     		mov	r1, #0
 563              	.L37:
 564              		.loc 1 387 0 is_stmt 0 discriminator 3
 565 02b4 264A     		ldr	r2, .L64+68
 566 02b6 1170     		strb	r1, [r2]
 388:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 389:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_SECONDARY_ADDRESS_ENABLE)
 567              		.loc 1 389 0 is_stmt 1 discriminator 3
 568 02b8 2C4A     		ldr	r2, .L64+96
 569 02ba 1278     		ldrb	r2, [r2]
 570 02bc 002A     		cmp	r2, #0
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 18


 571 02be 06D0     		beq	.L33
 390:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 391:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 392:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_EZI2C_SET_INDEX(activeAddress, locIndex);
 572              		.loc 1 392 0
 573 02c0 002B     		cmp	r3, #0
 574 02c2 02D1     		bne	.L38
 575              		.loc 1 392 0 is_stmt 0 discriminator 1
 576 02c4 134B     		ldr	r3, .L64+8
 577 02c6 1C80     		strh	r4, [r3]
 578 02c8 01E0     		b	.L33
 579              	.L38:
 580              		.loc 1 392 0 discriminator 2
 581 02ca 134B     		ldr	r3, .L64+12
 582 02cc 1C80     		strh	r4, [r3]
 583              	.L33:
 393:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 394:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     
 395:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 396:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 397:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 398:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 399:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 400:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 401:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 */
 402:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_ADDR_MATCH))
 584              		.loc 1 402 0 is_stmt 1
 585 02ce 6906     		lsl	r1, r5, #25
 586 02d0 00D4     		bmi	.LCB594
 587 02d2 B6E0     		b	.L39	@long jump
 588              	.LCB594:
 403:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 404:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_SECONDARY_ADDRESS_ENABLE)
 589              		.loc 1 404 0
 590 02d4 254B     		ldr	r3, .L64+96
 591 02d6 1B78     		ldrb	r3, [r3]
 592 02d8 002B     		cmp	r3, #0
 593 02da 65D0     		beq	.L58
 405:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 406:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 407:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locByte = UART_1_GET_I2C_7BIT_ADDRESS(UART_1_RX_FIFO_RD_REG);
 594              		.loc 1 407 0
 595 02dc 1F4B     		ldr	r3, .L64+80
 596 02de 1B68     		ldr	r3, [r3]
 597 02e0 5B08     		lsr	r3, r3, #1
 598              	.LVL40:
 408:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 409:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearRxInterruptSource(UART_1_INTR_RX_NOT_EMPTY);
 599              		.loc 1 409 0
 600 02e2 0421     		mov	r1, #4
 601 02e4 174A     		ldr	r2, .L64+56
 602 02e6 1160     		str	r1, [r2]
 410:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 411:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Check received address against device addresses */
 412:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         if(UART_1_addrBuf1 == locByte)
 603              		.loc 1 412 0
 604 02e8 224A     		ldr	r2, .L64+104
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 19


 605 02ea 1278     		ldrb	r2, [r2]
 606 02ec 9A42     		cmp	r2, r3
 607 02ee 49D1     		bne	.L41
 413:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 414:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 415:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_dataBuffer = UART_1_dataBuffer1;
 608              		.loc 1 415 0
 609 02f0 074B     		ldr	r3, .L64+4
 610              	.LVL41:
 611 02f2 214A     		ldr	r2, .L64+108
 612 02f4 1268     		ldr	r2, [r2]
 613 02f6 5A60     		str	r2, [r3, #4]
 416:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_bufSizeBuf = UART_1_bufSizeBuf1;
 614              		.loc 1 416 0
 615 02f8 204A     		ldr	r2, .L64+112
 616 02fa 1288     		ldrh	r2, [r2]
 617 02fc 1A81     		strh	r2, [r3, #8]
 417:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_protectBuf = UART_1_protectBuf1;
 618              		.loc 1 417 0
 619 02fe 204A     		ldr	r2, .L64+116
 620 0300 1288     		ldrh	r2, [r2]
 621 0302 5A81     		strh	r2, [r3, #10]
 418:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 419:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             activeAddress = UART_1_EZI2C_ACTIVE_ADDRESS1;
 622              		.loc 1 419 0
 623 0304 0022     		mov	r2, #0
 624 0306 1A70     		strb	r2, [r3]
  59:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         ackResponse = UART_1_EZI2C_ACK_RECEIVED_ADDRESS;
 625              		.loc 1 59 0
 626 0308 0123     		mov	r3, #1
 627 030a 50E0     		b	.L40
 628              	.L65:
 629              		.align	2
 630              	.L64:
 631 030c 00000000 		.word	UART_1_customIntrHandler
 632 0310 00000000 		.word	.LANCHOR0
 633 0314 00000000 		.word	UART_1_indexBuf1
 634 0318 00000000 		.word	UART_1_indexBuf2
 635 031c 400F0740 		.word	1074204480
 636 0320 000E0740 		.word	1074204160
 637 0324 00000740 		.word	1074200576
 638 0328 00000000 		.word	UART_1_curStatus
 639 032c 880F0740 		.word	1074204552
 640 0330 00000000 		.word	UART_1_offsetBuf1
 641 0334 60000740 		.word	1074200672
 642 0338 FF5FFFFF 		.word	-40961
 643 033c C80F0740 		.word	1074204616
 644 0340 ED0F0000 		.word	4077
 645 0344 C00F0740 		.word	1074204608
 646 0348 FF0F0000 		.word	4095
 647 034c 00000000 		.word	UART_1_subAddrSize
 648 0350 00000000 		.word	UART_1_fsmState
 649 0354 880E0740 		.word	1074204296
 650 0358 CC0F0740 		.word	1074204620
 651 035c 40030740 		.word	1074201408
 652 0360 6C000740 		.word	1074200684
 653 0364 00000000 		.word	UART_1_offsetBuf2
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 20


 654 0368 08030740 		.word	1074201352
 655 036c 00000000 		.word	UART_1_numberOfAddr
 656 0370 4C0F0740 		.word	1074204492
 657 0374 00000000 		.word	UART_1_addrBuf1
 658 0378 00000000 		.word	UART_1_dataBuffer1
 659 037c 00000000 		.word	UART_1_bufSizeBuf1
 660 0380 00000000 		.word	UART_1_protectBuf1
 661              	.LVL42:
 662              	.L41:
 420:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 421:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         else if(UART_1_addrBuf2 == locByte)
 663              		.loc 1 421 0
 664 0384 454A     		ldr	r2, .L66
 665 0386 1278     		ldrb	r2, [r2]
 666 0388 9A42     		cmp	r2, r3
 667 038a 0FD1     		bne	.L59
 422:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 423:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 424:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_dataBuffer = UART_1_dataBuffer2;
 668              		.loc 1 424 0
 669 038c 444B     		ldr	r3, .L66+4
 670              	.LVL43:
 671 038e 454A     		ldr	r2, .L66+8
 672 0390 1268     		ldr	r2, [r2]
 673 0392 5A60     		str	r2, [r3, #4]
 425:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_bufSizeBuf = UART_1_bufSizeBuf2;
 674              		.loc 1 425 0
 675 0394 444A     		ldr	r2, .L66+12
 676 0396 1288     		ldrh	r2, [r2]
 677 0398 1A81     		strh	r2, [r3, #8]
 426:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_protectBuf = UART_1_protectBuf2;
 678              		.loc 1 426 0
 679 039a 444A     		ldr	r2, .L66+16
 680 039c 1288     		ldrh	r2, [r2]
 681 039e 5A81     		strh	r2, [r3, #10]
 427:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 428:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             activeAddress = UART_1_EZI2C_ACTIVE_ADDRESS2;
 682              		.loc 1 428 0
 683 03a0 0122     		mov	r2, #1
 684 03a2 1A70     		strb	r2, [r3]
  59:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         ackResponse = UART_1_EZI2C_ACK_RECEIVED_ADDRESS;
 685              		.loc 1 59 0
 686 03a4 0123     		mov	r3, #1
 687 03a6 02E0     		b	.L40
 688              	.L58:
 689 03a8 0123     		mov	r3, #1
 690 03aa 00E0     		b	.L40
 691              	.LVL44:
 692              	.L59:
 429:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 430:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         else
 431:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 432:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Address does not match */
 433:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             ackResponse = UART_1_EZI2C_NACK_RECEIVED_ADDRESS;
 693              		.loc 1 433 0
 694 03ac 0023     		mov	r3, #0
 695              	.LVL45:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 21


 696              	.L40:
 434:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 435:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 436:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     
 437:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 438:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 #if(UART_1_SECONDARY_ADDRESS_ENABLE_CONST)
 439:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 697              		.loc 1 439 0
 698 03ae 002B     		cmp	r3, #0
 699 03b0 08D1     		bne	.L42
 440:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 441:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 442:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearI2CExtClkInterruptSource(UART_1_INTR_I2C_EC_WAKE_UP);
 700              		.loc 1 442 0
 701 03b2 0122     		mov	r2, #1
 702 03b4 3E4B     		ldr	r3, .L66+20
 703              	.LVL46:
 704 03b6 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearSlaveInterruptSource(UART_1_INTR_SLAVE_ALL);
 705              		.loc 1 443 0
 706 03b8 3E4A     		ldr	r2, .L66+24
 707 03ba 3F4B     		ldr	r3, .L66+28
 708 03bc 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 445:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #if(!UART_1_CY_SCBIP_V0)
 446:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 447:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_DISABLE_INTR_SLAVE(UART_1_INTR_SLAVE_I2C_STOP);
 448:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #endif /* (!UART_1_CY_SCBIP_V0) */
 449:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 450:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 451:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_I2C_SLAVE_GENERATE_NACK;
 709              		.loc 1 451 0
 710 03be FFF7FEFF 		bl	UART_1_I2CSlaveNackGeneration
 711              	.LVL47:
 712 03c2 3EE0     		b	.L39
 713              	.LVL48:
 714              	.L42:
 452:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 453:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     else
 454:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 #endif /* (UART_1_SECONDARY_ADDRESS_ENABLE_CONST) */
 455:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 456:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 457:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 458:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         if(!UART_1_SECONDARY_ADDRESS_ENABLE)
 715              		.loc 1 458 0
 716 03c4 3D4B     		ldr	r3, .L66+32
 717              	.LVL49:
 718 03c6 1B78     		ldrb	r3, [r3]
 719 03c8 002B     		cmp	r3, #0
 720 03ca 0BD1     		bne	.L43
 459:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 460:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 461:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_dataBuffer = UART_1_dataBuffer1;
 721              		.loc 1 461 0
 722 03cc 344B     		ldr	r3, .L66+4
 723 03ce 3C4A     		ldr	r2, .L66+36
 724 03d0 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 22


 725 03d2 5A60     		str	r2, [r3, #4]
 462:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_bufSizeBuf = UART_1_bufSizeBuf1;
 726              		.loc 1 462 0
 727 03d4 3B4A     		ldr	r2, .L66+40
 728 03d6 1288     		ldrh	r2, [r2]
 729 03d8 1A81     		strh	r2, [r3, #8]
 463:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_protectBuf = UART_1_protectBuf1;
 730              		.loc 1 463 0
 731 03da 3B4A     		ldr	r2, .L66+44
 732 03dc 1288     		ldrh	r2, [r2]
 733 03de 5A81     		strh	r2, [r3, #10]
 464:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 465:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             activeAddress = UART_1_EZI2C_ACTIVE_ADDRESS1;
 734              		.loc 1 465 0
 735 03e0 0022     		mov	r2, #0
 736 03e2 1A70     		strb	r2, [r3]
 737              	.L43:
 466:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 467:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 468:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 469:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 470:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_curStatus |= (uint8) UART_1_EZI2C_STATUS_BUSY;
 738              		.loc 1 470 0
 739 03e4 394B     		ldr	r3, .L66+48
 740 03e6 1978     		ldrb	r1, [r3]
 741 03e8 2022     		mov	r2, #32
 742 03ea 0A43     		orr	r2, r1
 743 03ec 1A70     		strb	r2, [r3]
 471:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 472:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 473:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locIndex = UART_1_EZI2C_GET_OFFSET(activeAddress);
 744              		.loc 1 473 0
 745 03ee 2C4B     		ldr	r3, .L66+4
 746 03f0 1B78     		ldrb	r3, [r3]
 747 03f2 002B     		cmp	r3, #0
 748 03f4 02D1     		bne	.L44
 749              		.loc 1 473 0 is_stmt 0 discriminator 1
 750 03f6 364B     		ldr	r3, .L66+52
 751 03f8 1C88     		ldrh	r4, [r3]
 752              	.LVL50:
 753 03fa 01E0     		b	.L45
 754              	.LVL51:
 755              	.L44:
 756              		.loc 1 473 0 discriminator 2
 757 03fc 354B     		ldr	r3, .L66+56
 758 03fe 1C88     		ldrh	r4, [r3]
 759              	.LVL52:
 760              	.L45:
 474:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 475:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Check transaction direction */
 476:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         if(UART_1_CHECK_I2C_STATUS(UART_1_I2C_STATUS_S_READ))
 761              		.loc 1 476 0 is_stmt 1 discriminator 3
 762 0400 354B     		ldr	r3, .L66+60
 763 0402 1B68     		ldr	r3, [r3]
 764 0404 DA06     		lsl	r2, r3, #27
 765 0406 11D5     		bpl	.L46
 477:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 23


 478:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 479:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             locBufSize = UART_1_bufSizeBuf - (uint16) locIndex;
 766              		.loc 1 479 0
 767 0408 254B     		ldr	r3, .L66+4
 768 040a 1A89     		ldrh	r2, [r3, #8]
 769 040c 121B     		sub	r2, r2, r4
 770 040e 5A80     		strh	r2, [r3, #2]
 480:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 481:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 482:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_CLEAR_TX_FIFO;
 771              		.loc 1 482 0
 772 0410 324B     		ldr	r3, .L66+64
 773 0412 1968     		ldr	r1, [r3]
 774 0414 8022     		mov	r2, #128
 775 0416 5202     		lsl	r2, r2, #9
 776 0418 0A43     		orr	r2, r1
 777 041a 1A60     		str	r2, [r3]
 778 041c 1968     		ldr	r1, [r3]
 779 041e 304A     		ldr	r2, .L66+68
 780 0420 0A40     		and	r2, r1
 781 0422 1A60     		str	r2, [r3]
 483:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_SetTxInterruptMode(UART_1_INTR_TX_EMPTY);
 782              		.loc 1 483 0
 783 0424 1022     		mov	r2, #16
 784 0426 2F4B     		ldr	r3, .L66+72
 785 0428 1A60     		str	r2, [r3]
 786 042a 02E0     		b	.L47
 787              	.L46:
 484:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 485:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         else
 486:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         {
 487:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 488:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                             UART_1_SetRxInterruptMode(UART_1_INTR_RX_NOT_EMPTY);
 788              		.loc 1 488 0
 789 042c 0422     		mov	r2, #4
 790 042e 2E4B     		ldr	r3, .L66+76
 791 0430 1A60     		str	r2, [r3]
 792              	.L47:
 489:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         }
 490:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 491:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 492:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearI2CExtClkInterruptSource(UART_1_INTR_I2C_EC_WAKE_UP);
 793              		.loc 1 492 0
 794 0432 0123     		mov	r3, #1
 795 0434 1E4A     		ldr	r2, .L66+20
 796 0436 1360     		str	r3, [r2]
 493:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearSlaveInterruptSource(UART_1_INTR_SLAVE_ALL);
 797              		.loc 1 493 0
 798 0438 1E49     		ldr	r1, .L66+24
 799 043a 1F4A     		ldr	r2, .L66+28
 800 043c 1160     		str	r1, [r2]
 494:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 495:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #if (!UART_1_CY_SCBIP_V0)
 496:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 497:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ENABLE_INTR_SLAVE(UART_1_INTR_SLAVE_I2C_STOP);
 498:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     #endif /* (!UART_1_CY_SCBIP_V0) */
 499:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 24


 500:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* ACK the address byte */
 501:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_I2C_SLAVE_GENERATE_ACK;
 801              		.loc 1 501 0
 802 043e 2B4A     		ldr	r2, .L66+80
 803 0440 1360     		str	r3, [r2]
 804              	.L39:
 502:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 503:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 504:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 505:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 506:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_ClearSlaveInterruptSource(locIntrSlave);
 805              		.loc 1 506 0
 806 0442 1D4B     		ldr	r3, .L66+28
 807 0444 1D60     		str	r5, [r3]
 808              	.L32:
 507:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 508:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 509:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 510:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 511:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 512:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             */
 513:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (UART_1_GetInterruptCause() & UART_1_INTR_CAUSE_TX))
 809              		.loc 1 513 0
 810 0446 2A4B     		ldr	r3, .L66+84
 811 0448 1B68     		ldr	r3, [r3]
 812 044a 5F07     		lsl	r7, r3, #29
 813 044c 1CD5     		bpl	.L9
 514:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 515:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 516:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 do
 517:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 518:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 519:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(0u != locBufSize)
 814              		.loc 1 519 0
 815 044e 144E     		ldr	r6, .L66+4
 816              	.LVL53:
 520:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 521:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = (uint32) UART_1_dataBuffer[locIndex];
 817              		.loc 1 521 0
 818 0450 321C     		mov	r2, r6
 819 0452 284D     		ldr	r5, .L66+88
 820              	.LVL54:
 522:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locIndex++;
 523:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locBufSize--;
 524:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 525:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     else
 526:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 527:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = UART_1_EZI2C_OVFL_RETURN;
 821              		.loc 1 527 0
 822 0454 FF20     		mov	r0, #255
 823 0456 8446     		mov	ip, r0
 528:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 529:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 530:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 while(UART_1_EZI2C_FIFO_SIZE != UART_1_GET_TX_FIFO_ENTRIES);
 824              		.loc 1 530 0
 825 0458 2748     		ldr	r0, .L66+92
 826 045a 0F21     		mov	r1, #15
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 25


 827              	.L60:
 519:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(0u != locBufSize)
 828              		.loc 1 519 0
 829 045c 7388     		ldrh	r3, [r6, #2]
 830 045e 002B     		cmp	r3, #0
 831 0460 09D0     		beq	.L48
 521:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = (uint32) UART_1_dataBuffer[locIndex];
 832              		.loc 1 521 0
 833 0462 5768     		ldr	r7, [r2, #4]
 834 0464 3B19     		add	r3, r7, r4
 835 0466 1B78     		ldrb	r3, [r3]
 836 0468 DBB2     		uxtb	r3, r3
 837 046a 2B60     		str	r3, [r5]
 522:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locIndex++;
 838              		.loc 1 522 0
 839 046c 0134     		add	r4, r4, #1
 840              	.LVL55:
 523:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locBufSize--;
 841              		.loc 1 523 0
 842 046e 5388     		ldrh	r3, [r2, #2]
 843 0470 013B     		sub	r3, r3, #1
 844 0472 5380     		strh	r3, [r2, #2]
 845 0474 01E0     		b	.L49
 846              	.L48:
 527:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = UART_1_EZI2C_OVFL_RETURN;
 847              		.loc 1 527 0
 848 0476 6346     		mov	r3, ip
 849 0478 2B60     		str	r3, [r5]
 850              	.L49:
 851              		.loc 1 530 0
 852 047a 0368     		ldr	r3, [r0]
 853 047c 0B40     		and	r3, r1
 854 047e 082B     		cmp	r3, #8
 855 0480 ECD1     		bne	.L60
 531:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 532:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_ClearTxInterruptSource(UART_1_INTR_TX_EMPTY);
 856              		.loc 1 532 0
 857 0482 1022     		mov	r2, #16
 858 0484 1D4B     		ldr	r3, .L66+96
 859 0486 1A60     		str	r2, [r3]
 860              	.L9:
 533:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 534:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         }
 535:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 536:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Store local index copy into global variable */
 537:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         UART_1_EZI2C_SET_INDEX(activeAddress, locIndex);
 861              		.loc 1 537 0
 862 0488 054B     		ldr	r3, .L66+4
 863 048a 1B78     		ldrb	r3, [r3]
 864 048c 002B     		cmp	r3, #0
 865 048e 02D1     		bne	.L51
 866              		.loc 1 537 0 is_stmt 0 discriminator 1
 867 0490 1B4B     		ldr	r3, .L66+100
 868 0492 1C80     		strh	r4, [r3]
 869 0494 01E0     		b	.L1
 870              	.L51:
 871              		.loc 1 537 0 discriminator 2
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 26


 872 0496 1B4B     		ldr	r3, .L66+104
 873 0498 1C80     		strh	r4, [r3]
 874              	.L1:
 538:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     }
 875              		.loc 1 538 0 is_stmt 1
 876              		@ sp needed
 877              	.LVL56:
 878 049a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 879              	.L67:
 880              		.align	2
 881              	.L66:
 882 049c 00000000 		.word	UART_1_addrBuf2
 883 04a0 00000000 		.word	.LANCHOR0
 884 04a4 00000000 		.word	UART_1_dataBuffer2
 885 04a8 00000000 		.word	UART_1_bufSizeBuf2
 886 04ac 00000000 		.word	UART_1_protectBuf2
 887 04b0 800E0740 		.word	1074204288
 888 04b4 FF0F0000 		.word	4095
 889 04b8 400F0740 		.word	1074204480
 890 04bc 00000000 		.word	UART_1_numberOfAddr
 891 04c0 00000000 		.word	UART_1_dataBuffer1
 892 04c4 00000000 		.word	UART_1_bufSizeBuf1
 893 04c8 00000000 		.word	UART_1_protectBuf1
 894 04cc 00000000 		.word	UART_1_curStatus
 895 04d0 00000000 		.word	UART_1_offsetBuf1
 896 04d4 00000000 		.word	UART_1_offsetBuf2
 897 04d8 64000740 		.word	1074200676
 898 04dc 04020740 		.word	1074201092
 899 04e0 FFFFFEFF 		.word	-65537
 900 04e4 880F0740 		.word	1074204552
 901 04e8 C80F0740 		.word	1074204616
 902 04ec 6C000740 		.word	1074200684
 903 04f0 000E0740 		.word	1074204160
 904 04f4 40020740 		.word	1074201152
 905 04f8 08020740 		.word	1074201096
 906 04fc 800F0740 		.word	1074204544
 907 0500 00000000 		.word	UART_1_indexBuf1
 908 0504 00000000 		.word	UART_1_indexBuf2
 909              		.cfi_endproc
 910              	.LFE0:
 911              		.size	UART_1_EZI2C_STRETCH_ISR, .-UART_1_EZI2C_STRETCH_ISR
 912              		.section	.text.UART_1_EZI2C_NO_STRETCH_ISR,"ax",%progbits
 913              		.align	2
 914              		.global	UART_1_EZI2C_NO_STRETCH_ISR
 915              		.code	16
 916              		.thumb_func
 917              		.type	UART_1_EZI2C_NO_STRETCH_ISR, %function
 918              	UART_1_EZI2C_NO_STRETCH_ISR:
 919              	.LFB1:
 539:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** #endif /* (UART_1_EZI2C_SCL_STRETCH_ENABLE_CONST) */
 540:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 541:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 542:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** #if(UART_1_EZI2C_SCL_STRETCH_DISABLE_CONST)
 543:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     /*******************************************************************************
 544:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Function Name: UART_1_EZI2C_NO_STRETCH_ISR
 545:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     ********************************************************************************
 546:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 27


 547:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Summary:
 548:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. Clock stretching is
 549:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  NOT used during operation.
 550:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
 551:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Parameters:
 552:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  None
 553:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
 554:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     * Return:
 555:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *  None
 556:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *
 557:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     *******************************************************************************/
 558:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     CY_ISR_PROTO(UART_1_EZI2C_NO_STRETCH_ISR)
 559:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     {
 920              		.loc 1 559 0
 921              		.cfi_startproc
 922 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 923              		.cfi_def_cfa_offset 24
 924              		.cfi_offset 3, -24
 925              		.cfi_offset 4, -20
 926              		.cfi_offset 5, -16
 927              		.cfi_offset 6, -12
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 5F46     		mov	r7, fp
 931 0004 5646     		mov	r6, r10
 932 0006 4D46     		mov	r5, r9
 933 0008 4446     		mov	r4, r8
 934 000a F0B4     		push	{r4, r5, r6, r7}
 935              		.cfi_def_cfa_offset 40
 936              		.cfi_offset 8, -40
 937              		.cfi_offset 9, -36
 938              		.cfi_offset 10, -32
 939              		.cfi_offset 11, -28
 560:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #if(UART_1_SUB_ADDRESS_SIZE16_CONST)
 561:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         static uint8 locOffset;
 562:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #endif /* (UART_1_SUB_ADDRESS_SIZE16_CONST) */
 563:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 564:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locByte;
 565:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locStatus;
 566:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locIntrSlave;
 567:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         uint32 locIntrCause;
 568:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 569:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
 570:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Calls registered customer routine to manage interrupt sources */
 571:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         if(NULL != UART_1_customIntrHandler)
 940              		.loc 1 571 0
 941 000c 894B     		ldr	r3, .L101
 942 000e 1B68     		ldr	r3, [r3]
 943 0010 002B     		cmp	r3, #0
 944 0012 00D0     		beq	.L69
 572:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         {
 573:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_customIntrHandler();
 945              		.loc 1 573 0
 946 0014 9847     		blx	r3
 947              	.LVL57:
 948              	.L69:
 574:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         }
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 28


 575:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #else
 576:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         CY_UART_1_CUSTOM_INTR_HANDLER();
 577:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
 578:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 579:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locByte = 0u;
 580:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 581:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Get copy of triggered slave interrupt sources */
 582:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locIntrSlave = UART_1_GetSlaveInterruptSource();
 949              		.loc 1 582 0
 950 0016 884B     		ldr	r3, .L101+4
 951 0018 1C68     		ldr	r4, [r3]
 952              	.LVL58:
 583:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locIntrCause = UART_1_GetInterruptCause();
 953              		.loc 1 583 0
 954 001a 884B     		ldr	r3, .L101+8
 955 001c 1D68     		ldr	r5, [r3]
 956              	.LVL59:
 584:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 585:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE.I2C_BUS_ERROR */
 586:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         /* Handles errors on the bus: There are cases when both bits are set.
 587:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
 588:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         */
 589:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         if(0u != (locIntrSlave & (UART_1_INTR_SLAVE_I2C_ARB_LOST |
 957              		.loc 1 589 0
 958 001e 0223     		mov	r3, #2
 959 0020 FF33     		add	r3, r3, #255
 960 0022 1C42     		tst	r4, r3
 961 0024 39D0     		beq	.L70
 590:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                                   UART_1_INTR_SLAVE_I2C_BUS_ERROR)))
 591:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         {
 592:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_CTRL_REG &= (uint32) ~UART_1_CTRL_ENABLED; /* Disable SCB block */
 962              		.loc 1 592 0
 963 0026 864B     		ldr	r3, .L101+12
 964 0028 1A68     		ldr	r2, [r3]
 965 002a 5200     		lsl	r2, r2, #1
 966 002c 5208     		lsr	r2, r2, #1
 967 002e 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 594:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #if (UART_1_CY_SCBIP_V0)
 595:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_ADDR_MATCH))
 968              		.loc 1 595 0
 969 0030 6006     		lsl	r0, r4, #25
 970 0032 19D5     		bpl	.L71
 596:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #endif /* (UART_1_CY_SCBIP_V0) */
 597:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 598:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_curStatus |= (uint8) UART_1_EZI2C_STATUS_ERR;
 971              		.loc 1 598 0
 972 0034 834B     		ldr	r3, .L101+16
 973 0036 1978     		ldrb	r1, [r3]
 974 0038 1022     		mov	r2, #16
 975 003a 0A43     		orr	r2, r1
 976 003c 1A70     		strb	r2, [r3]
 599:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 600:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(0u != (UART_1_EZI2C_FSM_WRITE_MASK & UART_1_fsmState))
 977              		.loc 1 600 0
 978 003e 824B     		ldr	r3, .L101+20
 979 0040 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 29


 980 0042 D907     		lsl	r1, r3, #31
 981 0044 0BD5     		bpl	.L72
 601:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 602:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Write complete */
 603:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_indexBuf1 != UART_1_offsetBuf1)
 982              		.loc 1 603 0
 983 0046 814B     		ldr	r3, .L101+24
 984 0048 1A88     		ldrh	r2, [r3]
 985 004a 814B     		ldr	r3, .L101+28
 986 004c 1B88     		ldrh	r3, [r3]
 987 004e 9A42     		cmp	r2, r3
 988 0050 0AD0     		beq	.L71
 604:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 605:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_curStatus |= (uint8) UART_1_INTR_SLAVE_I2C_WRITE_STOP;
 989              		.loc 1 605 0
 990 0052 7C4B     		ldr	r3, .L101+16
 991 0054 1978     		ldrb	r1, [r3]
 992 0056 0822     		mov	r2, #8
 993 0058 0A43     		orr	r2, r1
 994 005a 1A70     		strb	r2, [r3]
 995 005c 04E0     		b	.L71
 996              	.L72:
 606:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 607:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 608:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 else
 609:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 610:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Read complete */
 611:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_curStatus |= (uint8) UART_1_INTR_SLAVE_I2C_NACK;
 997              		.loc 1 611 0
 998 005e 794B     		ldr	r3, .L101+16
 999 0060 1978     		ldrb	r1, [r3]
 1000 0062 0222     		mov	r2, #2
 1001 0064 0A43     		orr	r2, r1
 1002 0066 1A70     		strb	r2, [r3]
 1003              	.L71:
 612:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 613:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 614:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 615:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Clean-up interrupt sources */
 616:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 1004              		.loc 1 616 0
 1005 0068 0022     		mov	r2, #0
 1006 006a 7A4B     		ldr	r3, .L101+32
 1007 006c 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 618:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #if (UART_1_CY_SCBIP_V0)
 619:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 620:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_NOT_EMPTY);
 1008              		.loc 1 620 0
 1009 006e 0422     		mov	r2, #4
 1010 0070 794B     		ldr	r3, .L101+36
 1011 0072 1A60     		str	r2, [r3]
 621:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_ClearSlaveInterruptSource(UART_1_INTR_SLAVE_ALL);
 1012              		.loc 1 621 0
 1013 0074 794A     		ldr	r2, .L101+40
 1014 0076 704B     		ldr	r3, .L101+4
 1015 0078 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 30


 622:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #endif /* (UART_1_CY_SCBIP_V0) */
 623:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 624:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_fsmState = UART_1_EZI2C_FSM_IDLE;
 1016              		.loc 1 624 0
 1017 007a 794B     		ldr	r3, .L101+44
 1018 007c 1B78     		ldrb	r3, [r3]
 1019 007e 002B     		cmp	r3, #0
 1020 0080 01D0     		beq	.L93
 1021 0082 0222     		mov	r2, #2
 1022 0084 00E0     		b	.L73
 1023              	.L93:
 1024 0086 0022     		mov	r2, #0
 1025              	.L73:
 1026              		.loc 1 624 0 is_stmt 0 discriminator 1
 1027 0088 6F4B     		ldr	r3, .L101+20
 1028 008a 1A70     		strb	r2, [r3]
 625:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 626:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             UART_1_CTRL_REG |= (uint32) UART_1_CTRL_ENABLED;  /* Enable SCB block */
 1029              		.loc 1 626 0 is_stmt 1 discriminator 1
 1030 008c 6C4B     		ldr	r3, .L101+12
 1031 008e 1968     		ldr	r1, [r3]
 1032 0090 8022     		mov	r2, #128
 1033 0092 1206     		lsl	r2, r2, #24
 1034 0094 0A43     		orr	r2, r1
 1035 0096 1A60     		str	r2, [r3]
 1036 0098 C6E0     		b	.L68
 1037              	.L70:
 627:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         }
 628:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         else
 629:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         {
 630:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* INTR_RX.NOT_EMPTY */
 631:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* The slave receives data from the master: accepts into the RX FIFO. At least one entr
 632:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             * read. The offset is written first and all the following bytes are data (expected to b
 633:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             * The slave ACKs all bytes, but it discards them if they do not match the write criteri
 634:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             * The slave NACKs the bytes in the case of an RX FIFO overflow.
 635:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             */
 636:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrCause & UART_1_INTR_CAUSE_RX))
 1038              		.loc 1 636 0
 1039 009a 2A07     		lsl	r2, r5, #28
 1040 009c 58D5     		bpl	.L94
 637:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 638:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Read byte from the RX FIFO */
 639:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 locByte = UART_1_RX_FIFO_RD_REG;
 1041              		.loc 1 639 0
 1042 009e 714B     		ldr	r3, .L101+48
 1043 00a0 1868     		ldr	r0, [r3]
 1044 00a2 8146     		mov	r9, r0
 1045              	.LVL60:
 640:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 641:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 switch(UART_1_fsmState)
 1046              		.loc 1 641 0
 1047 00a4 684B     		ldr	r3, .L101+20
 1048 00a6 1B78     		ldrb	r3, [r3]
 1049 00a8 012B     		cmp	r3, #1
 1050 00aa 06D0     		beq	.L77
 1051 00ac 002B     		cmp	r3, #0
 1052 00ae 1ED0     		beq	.L78
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 31


 1053 00b0 022B     		cmp	r3, #2
 1054 00b2 16D0     		beq	.L79
 1055 00b4 032B     		cmp	r3, #3
 1056 00b6 39D0     		beq	.L80
 1057 00b8 43E0     		b	.L100
 1058              	.L77:
 642:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 643:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 644:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 case UART_1_EZI2C_FSM_BYTE_WRITE:
 645:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Check buffer index against protect area */
 646:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_indexBuf1 < UART_1_protectBuf1)
 1059              		.loc 1 646 0
 1060 00ba 644B     		ldr	r3, .L101+24
 1061 00bc 1B88     		ldrh	r3, [r3]
 1062 00be 6A4A     		ldr	r2, .L101+52
 1063 00c0 1288     		ldrh	r2, [r2]
 1064 00c2 9342     		cmp	r3, r2
 1065 00c4 09D2     		bcs	.L81
 647:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 648:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Stores received byte into buffer */
 649:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_dataBuffer1[UART_1_indexBuf1] = (uint8) locByte;
 1066              		.loc 1 649 0
 1067 00c6 694A     		ldr	r2, .L101+56
 1068 00c8 1268     		ldr	r2, [r2]
 1069 00ca D318     		add	r3, r2, r3
 1070 00cc C2B2     		uxtb	r2, r0
 1071 00ce 1A70     		strb	r2, [r3]
 650:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_indexBuf1++;
 1072              		.loc 1 650 0
 1073 00d0 5E4B     		ldr	r3, .L101+24
 1074 00d2 1A88     		ldrh	r2, [r3]
 1075 00d4 0132     		add	r2, r2, #1
 1076 00d6 1A80     		strh	r2, [r3]
 1077 00d8 36E0     		b	.L82
 1078              	.L81:
 651:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 652:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     else
 653:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 654:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Discard current byte and sets FSM state to discard following bytes */
 655:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_fsmState = UART_1_EZI2C_FSM_WAIT_STOP;
 1079              		.loc 1 655 0
 1080 00da 0322     		mov	r2, #3
 1081 00dc 5A4B     		ldr	r3, .L101+20
 1082 00de 1A70     		strb	r2, [r3]
 1083 00e0 32E0     		b	.L82
 1084              	.L79:
 656:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 657:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 658:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     break;
 659:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 660:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #if(UART_1_SUB_ADDRESS_SIZE16_CONST)
 661:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 case UART_1_EZI2C_FSM_OFFSET_HI8:
 662:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 663:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Store high byte of offset */
 664:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locOffset = (uint8) locByte;
 1085              		.loc 1 664 0
 1086 00e2 634B     		ldr	r3, .L101+60
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 32


 1087 00e4 1873     		strb	r0, [r3, #12]
 665:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 666:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_fsmState  = UART_1_EZI2C_FSM_OFFSET_LO8;
 1088              		.loc 1 666 0
 1089 00e6 0022     		mov	r2, #0
 1090 00e8 574B     		ldr	r3, .L101+20
 1091 00ea 1A70     		strb	r2, [r3]
 667:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 668:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     break;
 1092              		.loc 1 668 0
 1093 00ec 2CE0     		b	.L82
 1094              	.L78:
 669:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #endif /* (UART_1_SUB_ADDRESS_SIZE16_CONST) */
 670:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 671:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 case UART_1_EZI2C_FSM_OFFSET_LO8:
 672:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 673:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_SUB_ADDRESS_SIZE16)
 1095              		.loc 1 673 0
 1096 00ee 5C4B     		ldr	r3, .L101+44
 1097 00f0 1B78     		ldrb	r3, [r3]
 1098 00f2 002B     		cmp	r3, #0
 1099 00f4 04D0     		beq	.L83
 674:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 675:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Append offset with high byte */
 676:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         locByte = ((uint32) ((uint32) locOffset << 8u)) | locByte;
 1100              		.loc 1 676 0
 1101 00f6 5E4B     		ldr	r3, .L101+60
 1102 00f8 1B7B     		ldrb	r3, [r3, #12]
 1103 00fa 1B02     		lsl	r3, r3, #8
 1104 00fc 1843     		orr	r0, r3
 1105              	.LVL61:
 1106 00fe 8146     		mov	r9, r0
 1107              	.LVL62:
 1108              	.L83:
 677:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 678:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     
 679:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 680:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Check if offset within buffer range */
 681:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(locByte < (uint32) UART_1_bufSizeBuf1)
 1109              		.loc 1 681 0
 1110 0100 5C4B     		ldr	r3, .L101+64
 1111 0102 1B88     		ldrh	r3, [r3]
 1112 0104 4B45     		cmp	r3, r9
 1113 0106 09D9     		bls	.L84
 682:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 683:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Store and sets received offset */
 684:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_offsetBuf1 = (uint16) locByte;
 1114              		.loc 1 684 0
 1115 0108 4946     		mov	r1, r9
 1116 010a 8BB2     		uxth	r3, r1
 1117 010c 504A     		ldr	r2, .L101+28
 1118 010e 1380     		strh	r3, [r2]
 685:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_indexBuf1  = (uint16) locByte;
 1119              		.loc 1 685 0
 1120 0110 4E4A     		ldr	r2, .L101+24
 1121 0112 1380     		strh	r3, [r2]
 686:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 33


 687:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Move FSM to data receive state */
 688:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_fsmState = UART_1_EZI2C_FSM_BYTE_WRITE;
 1122              		.loc 1 688 0
 1123 0114 0122     		mov	r2, #1
 1124 0116 4C4B     		ldr	r3, .L101+20
 1125 0118 1A70     		strb	r2, [r3]
 1126 011a 15E0     		b	.L82
 1127              	.L84:
 689:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 690:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     else
 691:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 692:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Reset index due to TX FIFO fill */
 693:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_indexBuf1 = (uint16) UART_1_offsetBuf1;
 1128              		.loc 1 693 0
 1129 011c 4C4B     		ldr	r3, .L101+28
 1130 011e 1A88     		ldrh	r2, [r3]
 1131 0120 4A4B     		ldr	r3, .L101+24
 1132 0122 1A80     		strh	r2, [r3]
 694:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 695:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Discard current byte and sets FSM state to default to discard following 
 696:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_fsmState = UART_1_EZI2C_FSM_WAIT_STOP;
 1133              		.loc 1 696 0
 1134 0124 0322     		mov	r2, #3
 1135 0126 484B     		ldr	r3, .L101+20
 1136 0128 1A70     		strb	r2, [r3]
 1137 012a 0DE0     		b	.L82
 1138              	.L80:
 697:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 698:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 699:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     break;
 700:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 701:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 case UART_1_EZI2C_FSM_WAIT_STOP:
 702:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Clear RX FIFO to discard all received data */
 703:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_CLEAR_RX_FIFO;
 1139              		.loc 1 703 0
 1140 012c 524B     		ldr	r3, .L101+68
 1141 012e 1968     		ldr	r1, [r3]
 1142 0130 8022     		mov	r2, #128
 1143 0132 5202     		lsl	r2, r2, #9
 1144 0134 0A43     		orr	r2, r1
 1145 0136 1A60     		str	r2, [r3]
 1146 0138 1968     		ldr	r1, [r3]
 1147 013a 504A     		ldr	r2, .L101+72
 1148 013c 0A40     		and	r2, r1
 1149 013e 1A60     		str	r2, [r3]
 704:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 705:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     break;
 1150              		.loc 1 705 0
 1151 0140 02E0     		b	.L82
 1152              	.L100:
 706:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 707:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 default:
 708:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     CYASSERT(0u != 0u); /* Should never get there */
 1153              		.loc 1 708 0 discriminator 1
 1154 0142 0020     		mov	r0, #0
 1155              	.LVL63:
 1156 0144 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 34


 1157              	.LVL64:
 1158              	.L82:
 709:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     break;
 710:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 711:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 712:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_ClearRxInterruptSource(UART_1_INTR_RX_NOT_EMPTY);
 1159              		.loc 1 712 0
 1160 0148 0422     		mov	r2, #4
 1161 014a 434B     		ldr	r3, .L101+36
 1162 014c 1A60     		str	r2, [r3]
 1163 014e 01E0     		b	.L75
 1164              	.LVL65:
 1165              	.L94:
 579:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         locByte = 0u;
 1166              		.loc 1 579 0
 1167 0150 0022     		mov	r2, #0
 1168 0152 9146     		mov	r9, r2
 1169              	.LVL66:
 1170              	.L75:
 713:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 714:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 715:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 716:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* INTR_SLAVE.I2C_START */
 717:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Catches start of transfer to trigger TX FIFO update event */
 718:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_START))
 1171              		.loc 1 718 0
 1172 0154 2023     		mov	r3, #32
 1173 0156 2340     		and	r3, r4
 1174 0158 9A46     		mov	r10, r3
 1175 015a 1CD0     		beq	.L85
 719:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 720:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #if(!UART_1_CY_SCBIP_V0)
 721:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(UART_1_EZI2C_EC_AM_ENABLE)
 722:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 723:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Manage INTR_I2C_EC.WAKE_UP as slave busy status */
 724:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_ClearI2CExtClkInterruptSource(UART_1_INTR_I2C_EC_WAKE_UP);
 725:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 726:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 else
 727:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 728:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Manage INTR_SLAVE.I2C_ADDR_MATCH as slave busy status */
 729:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_ClearSlaveInterruptSource(UART_1_INTR_SLAVE_I2C_ADDR_MATCH);
 730:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 731:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 
 732:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #else
 733:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Manage INTR_SLAVE.I2C_ADDR_MATCH as slave busy status */
 734:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_ClearSlaveInterruptSource(UART_1_INTR_SLAVE_I2C_ADDR_MATCH);
 1176              		.loc 1 734 0
 1177 015c 364B     		ldr	r3, .L101+4
 1178 015e 4022     		mov	r2, #64
 1179 0160 1A60     		str	r2, [r3]
 735:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             #endif /* (UART_1_CY_SCBIP_V0) */
 736:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 737:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Clear TX FIFO and put a byte */
 738:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_FAST_CLEAR_TX_FIFO;
 1180              		.loc 1 738 0
 1181 0162 474A     		ldr	r2, .L101+76
 1182 0164 4749     		ldr	r1, .L101+80
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 35


 1183 0166 1160     		str	r1, [r2]
 1184 0168 0221     		mov	r1, #2
 1185 016a 1160     		str	r1, [r2]
 739:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_TX_FIFO_WR_REG = (uint32) UART_1_dataBuffer1[UART_1_offsetBuf1];
 1186              		.loc 1 739 0
 1187 016c 3849     		ldr	r1, .L101+28
 1188 016e 0A88     		ldrh	r2, [r1]
 1189 0170 3E48     		ldr	r0, .L101+56
 1190 0172 0068     		ldr	r0, [r0]
 1191 0174 8218     		add	r2, r0, r2
 1192 0176 1078     		ldrb	r0, [r2]
 1193 0178 C0B2     		uxtb	r0, r0
 1194 017a 434A     		ldr	r2, .L101+84
 1195 017c 1060     		str	r0, [r2]
 740:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 741:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Store buffer index to be handled by INTR_SLAVE.I2C_STOP */
 742:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 locByte = (uint32) UART_1_indexBuf1;
 1196              		.loc 1 742 0
 1197 017e 334A     		ldr	r2, .L101+24
 1198 0180 1088     		ldrh	r0, [r2]
 1199 0182 8146     		mov	r9, r0
 1200              	.LVL67:
 743:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 744:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Update index: one byte is already in the TX FIFO */
 745:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_indexBuf1 = (uint16) UART_1_offsetBuf1 + 1u;
 1201              		.loc 1 745 0
 1202 0184 0988     		ldrh	r1, [r1]
 1203 0186 0131     		add	r1, r1, #1
 1204 0188 1180     		strh	r1, [r2]
 746:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 747:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Enable INTR_TX.NOT_FULL to load TX FIFO */
 748:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_SetTxInterruptMode(UART_1_INTR_TX_TRIGGER);
 1205              		.loc 1 748 0
 1206 018a 0121     		mov	r1, #1
 1207 018c 314A     		ldr	r2, .L101+32
 1208 018e 1160     		str	r1, [r2]
 749:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 750:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Clear locIntrSlave after INTR.TX_TRIGGER is enabled */
 751:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_ClearSlaveInterruptSource(locIntrSlave);
 1209              		.loc 1 751 0
 1210 0190 1C60     		str	r4, [r3]
 752:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 753:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 locIntrCause |= UART_1_INTR_CAUSE_TX;
 1211              		.loc 1 753 0
 1212 0192 0423     		mov	r3, #4
 1213 0194 1D43     		orr	r5, r3
 1214              	.LVL68:
 1215              	.L85:
 754:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 755:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 756:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 757:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* INTR_TX.TRIGGER */
 758:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The TX FIFO is loaded wit
 759:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             *  until used entries are less than UART_1_TX_LOAD_SIZE. If index reaches end of the
 760:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             *  buffer the 0xFF is sent to the end of transfer.
 761:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             */
 762:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrCause & UART_1_INTR_CAUSE_TX))
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 36


 1216              		.loc 1 762 0
 1217 0196 6907     		lsl	r1, r5, #29
 1218 0198 21D5     		bpl	.L86
 763:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 764:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is room */
 765:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 do
 766:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 767:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Check transmit buffer range */
 768:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_indexBuf1 < UART_1_bufSizeBuf1)
 1219              		.loc 1 768 0
 1220 019a 2C4A     		ldr	r2, .L101+24
 1221 019c 9446     		mov	ip, r2
 1222 019e 354F     		ldr	r7, .L101+64
 769:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 770:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = (uint32) UART_1_dataBuffer1[UART_1_indexBuf1];
 1223              		.loc 1 770 0
 1224 01a0 324E     		ldr	r6, .L101+56
 1225 01a2 394D     		ldr	r5, .L101+84
 1226              	.LVL69:
 771:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_indexBuf1++;
 1227              		.loc 1 771 0
 1228 01a4 9346     		mov	fp, r2
 772:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 773:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     else
 774:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 775:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = UART_1_EZI2C_OVFL_RETURN;
 1229              		.loc 1 775 0
 1230 01a6 FF20     		mov	r0, #255
 1231 01a8 8046     		mov	r8, r0
 776:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 777:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 778:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 779:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 while(UART_1_TX_LOAD_SIZE != UART_1_GET_TX_FIFO_ENTRIES);
 1232              		.loc 1 779 0
 1233 01aa 3849     		ldr	r1, .L101+88
 1234 01ac 0F22     		mov	r2, #15
 1235              	.L98:
 768:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_indexBuf1 < UART_1_bufSizeBuf1)
 1236              		.loc 1 768 0
 1237 01ae 6046     		mov	r0, ip
 1238 01b0 0388     		ldrh	r3, [r0]
 1239 01b2 3888     		ldrh	r0, [r7]
 1240 01b4 8342     		cmp	r3, r0
 1241 01b6 09D2     		bcs	.L87
 770:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = (uint32) UART_1_dataBuffer1[UART_1_indexBuf1];
 1242              		.loc 1 770 0
 1243 01b8 3068     		ldr	r0, [r6]
 1244 01ba C318     		add	r3, r0, r3
 1245 01bc 1B78     		ldrb	r3, [r3]
 1246 01be DBB2     		uxtb	r3, r3
 1247 01c0 2B60     		str	r3, [r5]
 771:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_indexBuf1++;
 1248              		.loc 1 771 0
 1249 01c2 5846     		mov	r0, fp
 1250 01c4 0388     		ldrh	r3, [r0]
 1251 01c6 0133     		add	r3, r3, #1
 1252 01c8 0380     		strh	r3, [r0]
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 37


 1253 01ca 01E0     		b	.L88
 1254              	.L87:
 775:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_TX_FIFO_WR_REG = UART_1_EZI2C_OVFL_RETURN;
 1255              		.loc 1 775 0
 1256 01cc 4346     		mov	r3, r8
 1257 01ce 2B60     		str	r3, [r5]
 1258              	.L88:
 1259              		.loc 1 779 0
 1260 01d0 0B68     		ldr	r3, [r1]
 1261 01d2 1340     		and	r3, r2
 1262 01d4 022B     		cmp	r3, #2
 1263 01d6 EAD1     		bne	.L98
 780:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 781:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_ClearTxInterruptSource(UART_1_INTR_TX_TRIGGER);
 1264              		.loc 1 781 0
 1265 01d8 0122     		mov	r2, #1
 1266 01da 2D4B     		ldr	r3, .L101+92
 1267 01dc 1A60     		str	r2, [r3]
 1268              	.L86:
 782:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 783:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 784:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 785:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* INTR_SLAVE.I2C_STOP */
 786:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             /* Catch completion of write or read transfer. */
 787:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(0u != (locIntrSlave & UART_1_INTR_SLAVE_I2C_STOP))
 1269              		.loc 1 787 0
 1270 01de E006     		lsl	r0, r4, #27
 1271 01e0 22D5     		bpl	.L68
 788:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 789:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(0u == (locIntrSlave & UART_1_INTR_SLAVE_I2C_START))
 1272              		.loc 1 789 0
 1273 01e2 5146     		mov	r1, r10
 1274 01e4 0029     		cmp	r1, #0
 1275 01e6 04D1     		bne	.L90
 790:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 791:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 #if(!UART_1_CY_SCBIP_V0)
 792:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     if(UART_1_EZI2C_EC_AM_ENABLE)
 793:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     {
 794:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         /* Manage INTR_I2C_EC.WAKE_UP as slave busy status */
 795:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                         UART_1_ClearI2CExtClkInterruptSource(UART_1_INTR_I2C_EC_WAKE_UP);
 796:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     }
 797:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     
 798:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 #endif /* (!UART_1_CY_SCBIP_V0) */
 799:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 800:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Manage INTR_SLAVE.I2C_ADDR_MATCH as slave busy status */
 801:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_ClearSlaveInterruptSource(locIntrSlave);
 1276              		.loc 1 801 0
 1277 01e8 134B     		ldr	r3, .L101+4
 1278 01ea 1C60     		str	r4, [r3]
 802:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 803:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Read current buffer index */
 804:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locByte = (uint32) UART_1_indexBuf1;
 1279              		.loc 1 804 0
 1280 01ec 174B     		ldr	r3, .L101+24
 1281 01ee 1B88     		ldrh	r3, [r3]
 1282 01f0 9946     		mov	r9, r3
 1283              	.LVL70:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 38


 1284              	.L90:
 805:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 806:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 807:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Set read completion mask */
 808:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 locStatus = UART_1_INTR_SLAVE_I2C_NACK;
 809:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 810:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if((locByte != UART_1_offsetBuf1) &&
 1285              		.loc 1 810 0
 1286 01f2 174B     		ldr	r3, .L101+28
 1287 01f4 1B88     		ldrh	r3, [r3]
 1288 01f6 4B45     		cmp	r3, r9
 1289 01f8 05D0     		beq	.L95
 811:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                    (0u != (UART_1_EZI2C_FSM_WRITE_MASK & UART_1_fsmState)))
 1290              		.loc 1 811 0 discriminator 1
 1291 01fa 134B     		ldr	r3, .L101+20
 1292 01fc 1B78     		ldrb	r3, [r3]
 810:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if((locByte != UART_1_offsetBuf1) &&
 1293              		.loc 1 810 0 discriminator 1
 1294 01fe DA07     		lsl	r2, r3, #31
 1295 0200 03D4     		bmi	.L96
 808:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 locStatus = UART_1_INTR_SLAVE_I2C_NACK;
 1296              		.loc 1 808 0
 1297 0202 0223     		mov	r3, #2
 1298 0204 02E0     		b	.L91
 1299              	.L95:
 1300 0206 0223     		mov	r3, #2
 1301 0208 00E0     		b	.L91
 1302              	.L96:
 812:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 813:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     /* Set write completion mask */
 814:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     locStatus |= UART_1_INTR_SLAVE_I2C_WRITE_STOP;
 1303              		.loc 1 814 0
 1304 020a 0A23     		mov	r3, #10
 1305              	.L91:
 1306              	.LVL71:
 815:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 816:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 817:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Set completion flags in the status variable */
 818:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_curStatus |= (uint8) (locStatus & locIntrSlave);
 1307              		.loc 1 818 0
 1308 020c 1C40     		and	r4, r3
 1309              	.LVL72:
 1310 020e 0D4B     		ldr	r3, .L101+16
 1311              	.LVL73:
 1312 0210 1A78     		ldrb	r2, [r3]
 1313 0212 1443     		orr	r4, r2
 1314 0214 1C70     		strb	r4, [r3]
 819:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 820:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 UART_1_fsmState = UART_1_EZI2C_FSM_IDLE;
 1315              		.loc 1 820 0
 1316 0216 124B     		ldr	r3, .L101+44
 1317 0218 1B78     		ldrb	r3, [r3]
 1318 021a 002B     		cmp	r3, #0
 1319 021c 01D0     		beq	.L97
 1320 021e 0222     		mov	r2, #2
 1321 0220 00E0     		b	.L92
 1322              	.L97:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 39


 1323 0222 0022     		mov	r2, #0
 1324              	.L92:
 1325              		.loc 1 820 0 is_stmt 0 discriminator 3
 1326 0224 084B     		ldr	r3, .L101+20
 1327 0226 1A70     		strb	r2, [r3]
 1328              	.LVL74:
 1329              	.L68:
 821:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 822:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 823:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c **** 
 824:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #if(!UART_1_CY_SCBIP_V0)
 825:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             if(UART_1_EZI2C_EC_AM_ENABLE)
 826:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             {
 827:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* INTR_I2C_EC.WAKE_UP */
 828:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 /* Wake up device from deep sleep on address match event. The matched address is NA
 829:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 if(0u != (locIntrCause & UART_1_INTR_CAUSE_I2C_EC))
 830:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 {
 831:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_I2C_SLAVE_GENERATE_NACK; /* NACK in active mode */
 832:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                     UART_1_ClearI2CExtClkInterruptSource(UART_1_INTR_I2C_EC_WAKE_UP);
 833:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****                 }
 834:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             }
 835:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****             
 836:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         #endif /* (!UART_1_CY_SCBIP_V0) */
 837:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****         }
 838:.\Generated_Source\PSoC4/UART_1_EZI2C_INT.c ****     }
 1330              		.loc 1 838 0 is_stmt 1
 1331              		@ sp needed
 1332 0228 3CBC     		pop	{r2, r3, r4, r5}
 1333 022a 9046     		mov	r8, r2
 1334 022c 9946     		mov	r9, r3
 1335 022e A246     		mov	r10, r4
 1336 0230 AB46     		mov	fp, r5
 1337 0232 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1338              	.L102:
 1339              		.align	2
 1340              	.L101:
 1341 0234 00000000 		.word	UART_1_customIntrHandler
 1342 0238 400F0740 		.word	1074204480
 1343 023c 000E0740 		.word	1074204160
 1344 0240 00000740 		.word	1074200576
 1345 0244 00000000 		.word	UART_1_curStatus
 1346 0248 00000000 		.word	UART_1_fsmState
 1347 024c 00000000 		.word	UART_1_indexBuf1
 1348 0250 00000000 		.word	UART_1_offsetBuf1
 1349 0254 880F0740 		.word	1074204552
 1350 0258 C00F0740 		.word	1074204608
 1351 025c FF0F0000 		.word	4095
 1352 0260 00000000 		.word	UART_1_subAddrSize
 1353 0264 40030740 		.word	1074201408
 1354 0268 00000000 		.word	UART_1_protectBuf1
 1355 026c 00000000 		.word	UART_1_dataBuffer1
 1356 0270 00000000 		.word	.LANCHOR0
 1357 0274 00000000 		.word	UART_1_bufSizeBuf1
 1358 0278 04030740 		.word	1074201348
 1359 027c FFFFFEFF 		.word	-65537
 1360 0280 04020740 		.word	1074201092
 1361 0284 02000100 		.word	65538
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 40


 1362 0288 40020740 		.word	1074201152
 1363 028c 08020740 		.word	1074201096
 1364 0290 800F0740 		.word	1074204544
 1365              		.cfi_endproc
 1366              	.LFE1:
 1367              		.size	UART_1_EZI2C_NO_STRETCH_ISR, .-UART_1_EZI2C_NO_STRETCH_ISR
 1368              		.bss
 1369              		.align	2
 1370              		.set	.LANCHOR0,. + 0
 1371              		.type	activeAddress.4810, %object
 1372              		.size	activeAddress.4810, 1
 1373              	activeAddress.4810:
 1374 0000 00       		.space	1
 1375 0001 00       		.space	1
 1376              		.type	locBufSize.4799, %object
 1377              		.size	locBufSize.4799, 2
 1378              	locBufSize.4799:
 1379 0002 0000     		.space	2
 1380              		.type	UART_1_dataBuffer.4807, %object
 1381              		.size	UART_1_dataBuffer.4807, 4
 1382              	UART_1_dataBuffer.4807:
 1383 0004 00000000 		.space	4
 1384              		.type	UART_1_bufSizeBuf.4808, %object
 1385              		.size	UART_1_bufSizeBuf.4808, 2
 1386              	UART_1_bufSizeBuf.4808:
 1387 0008 0000     		.space	2
 1388              		.type	UART_1_protectBuf.4809, %object
 1389              		.size	UART_1_protectBuf.4809, 2
 1390              	UART_1_protectBuf.4809:
 1391 000a 0000     		.space	2
 1392              		.type	locOffset.4825, %object
 1393              		.size	locOffset.4825, 1
 1394              	locOffset.4825:
 1395 000c 00       		.space	1
 1396 000d 000000   		.text
 1397              	.Letext0:
 1398              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1399              		.file 3 ".\\Generated_Source\\PSoC4\\UART_1_PVT.h"
 1400              		.file 4 ".\\Generated_Source\\PSoC4\\UART_1_EZI2C_PVT.h"
 1401              		.file 5 ".\\Generated_Source\\PSoC4\\UART_1.h"
 1402              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1403              		.section	.debug_info,"",%progbits
 1404              	.Ldebug_info0:
 1405 0000 2D030000 		.4byte	0x32d
 1406 0004 0400     		.2byte	0x4
 1407 0006 00000000 		.4byte	.Ldebug_abbrev0
 1408 000a 04       		.byte	0x4
 1409 000b 01       		.uleb128 0x1
 1410 000c 6A020000 		.4byte	.LASF51
 1411 0010 01       		.byte	0x1
 1412 0011 3E020000 		.4byte	.LASF52
 1413 0015 41000000 		.4byte	.LASF53
 1414 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1415 001d 00000000 		.4byte	0
 1416 0021 00000000 		.4byte	.Ldebug_line0
 1417 0025 02       		.uleb128 0x2
 1418 0026 01       		.byte	0x1
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 41


 1419 0027 06       		.byte	0x6
 1420 0028 C7030000 		.4byte	.LASF0
 1421 002c 02       		.uleb128 0x2
 1422 002d 01       		.byte	0x1
 1423 002e 08       		.byte	0x8
 1424 002f 42010000 		.4byte	.LASF1
 1425 0033 02       		.uleb128 0x2
 1426 0034 02       		.byte	0x2
 1427 0035 05       		.byte	0x5
 1428 0036 50030000 		.4byte	.LASF2
 1429 003a 02       		.uleb128 0x2
 1430 003b 02       		.byte	0x2
 1431 003c 07       		.byte	0x7
 1432 003d CA000000 		.4byte	.LASF3
 1433 0041 02       		.uleb128 0x2
 1434 0042 04       		.byte	0x4
 1435 0043 05       		.byte	0x5
 1436 0044 BE030000 		.4byte	.LASF4
 1437 0048 02       		.uleb128 0x2
 1438 0049 04       		.byte	0x4
 1439 004a 07       		.byte	0x7
 1440 004b 5A010000 		.4byte	.LASF5
 1441 004f 02       		.uleb128 0x2
 1442 0050 08       		.byte	0x8
 1443 0051 05       		.byte	0x5
 1444 0052 30030000 		.4byte	.LASF6
 1445 0056 02       		.uleb128 0x2
 1446 0057 08       		.byte	0x8
 1447 0058 07       		.byte	0x7
 1448 0059 27020000 		.4byte	.LASF7
 1449 005d 03       		.uleb128 0x3
 1450 005e 04       		.byte	0x4
 1451 005f 05       		.byte	0x5
 1452 0060 696E7400 		.ascii	"int\000"
 1453 0064 02       		.uleb128 0x2
 1454 0065 04       		.byte	0x4
 1455 0066 07       		.byte	0x7
 1456 0067 05020000 		.4byte	.LASF8
 1457 006b 04       		.uleb128 0x4
 1458 006c 6C010000 		.4byte	.LASF9
 1459 0070 02       		.byte	0x2
 1460 0071 B3       		.byte	0xb3
 1461 0072 2C000000 		.4byte	0x2c
 1462 0076 04       		.uleb128 0x4
 1463 0077 D2010000 		.4byte	.LASF10
 1464 007b 02       		.byte	0x2
 1465 007c B4       		.byte	0xb4
 1466 007d 3A000000 		.4byte	0x3a
 1467 0081 04       		.uleb128 0x4
 1468 0082 FE010000 		.4byte	.LASF11
 1469 0086 02       		.byte	0x2
 1470 0087 B5       		.byte	0xb5
 1471 0088 48000000 		.4byte	0x48
 1472 008c 02       		.uleb128 0x2
 1473 008d 04       		.byte	0x4
 1474 008e 04       		.byte	0x4
 1475 008f B1000000 		.4byte	.LASF12
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 42


 1476 0093 02       		.uleb128 0x2
 1477 0094 08       		.byte	0x8
 1478 0095 04       		.byte	0x4
 1479 0096 97010000 		.4byte	.LASF13
 1480 009a 02       		.uleb128 0x2
 1481 009b 01       		.byte	0x1
 1482 009c 08       		.byte	0x8
 1483 009d 3E030000 		.4byte	.LASF14
 1484 00a1 05       		.uleb128 0x5
 1485 00a2 6B000000 		.4byte	0x6b
 1486 00a6 06       		.uleb128 0x6
 1487 00a7 2D000000 		.4byte	.LASF15
 1488 00ab 02       		.byte	0x2
 1489 00ac 5F01     		.2byte	0x15f
 1490 00ae B2000000 		.4byte	0xb2
 1491 00b2 05       		.uleb128 0x5
 1492 00b3 81000000 		.4byte	0x81
 1493 00b7 06       		.uleb128 0x6
 1494 00b8 E6020000 		.4byte	.LASF16
 1495 00bc 02       		.byte	0x2
 1496 00bd 6F01     		.2byte	0x16f
 1497 00bf C3000000 		.4byte	0xc3
 1498 00c3 07       		.uleb128 0x7
 1499 00c4 04       		.byte	0x4
 1500 00c5 C9000000 		.4byte	0xc9
 1501 00c9 08       		.uleb128 0x8
 1502 00ca 02       		.uleb128 0x2
 1503 00cb 04       		.byte	0x4
 1504 00cc 07       		.byte	0x7
 1505 00cd 0B030000 		.4byte	.LASF17
 1506 00d1 09       		.uleb128 0x9
 1507 00d2 A6010000 		.4byte	.LASF31
 1508 00d6 01       		.byte	0x1
 1509 00d7 25       		.byte	0x25
 1510 00d8 00000000 		.4byte	.LFB0
 1511 00dc 08050000 		.4byte	.LFE0-.LFB0
 1512 00e0 01       		.uleb128 0x1
 1513 00e1 9C       		.byte	0x9c
 1514 00e2 E2010000 		.4byte	0x1e2
 1515 00e6 0A       		.uleb128 0xa
 1516 00e7 12020000 		.4byte	.LASF18
 1517 00eb 01       		.byte	0x1
 1518 00ec 27       		.byte	0x27
 1519 00ed 76000000 		.4byte	0x76
 1520 00f1 05       		.uleb128 0x5
 1521 00f2 03       		.byte	0x3
 1522 00f3 02000000 		.4byte	locBufSize.4799
 1523 00f7 0B       		.uleb128 0xb
 1524 00f8 39010000 		.4byte	.LASF19
 1525 00fc 01       		.byte	0x1
 1526 00fd 28       		.byte	0x28
 1527 00fe 81000000 		.4byte	0x81
 1528 0102 00000000 		.4byte	.LLST0
 1529 0106 0B       		.uleb128 0xb
 1530 0107 50010000 		.4byte	.LASF20
 1531 010b 01       		.byte	0x1
 1532 010c 29       		.byte	0x29
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 43


 1533 010d 81000000 		.4byte	0x81
 1534 0111 3F000000 		.4byte	.LLST1
 1535 0115 0B       		.uleb128 0xb
 1536 0116 DD000000 		.4byte	.LASF21
 1537 011a 01       		.byte	0x1
 1538 011b 2B       		.byte	0x2b
 1539 011c 81000000 		.4byte	0x81
 1540 0120 6E000000 		.4byte	.LLST2
 1541 0124 0B       		.uleb128 0xb
 1542 0125 1D020000 		.4byte	.LASF22
 1543 0129 01       		.byte	0x1
 1544 012a 2C       		.byte	0x2c
 1545 012b 81000000 		.4byte	0x81
 1546 012f A4000000 		.4byte	.LLST3
 1547 0133 0B       		.uleb128 0xb
 1548 0134 9E010000 		.4byte	.LASF23
 1549 0138 01       		.byte	0x1
 1550 0139 2D       		.byte	0x2d
 1551 013a 81000000 		.4byte	0x81
 1552 013e E3000000 		.4byte	.LLST4
 1553 0142 0B       		.uleb128 0xb
 1554 0143 9E030000 		.4byte	.LASF24
 1555 0147 01       		.byte	0x1
 1556 0148 2F       		.byte	0x2f
 1557 0149 81000000 		.4byte	0x81
 1558 014d 43010000 		.4byte	.LLST5
 1559 0151 0B       		.uleb128 0xb
 1560 0152 43030000 		.4byte	.LASF25
 1561 0156 01       		.byte	0x1
 1562 0157 30       		.byte	0x30
 1563 0158 81000000 		.4byte	0x81
 1564 015c 56010000 		.4byte	.LLST6
 1565 0160 0A       		.uleb128 0xa
 1566 0161 DD030000 		.4byte	.LASF26
 1567 0165 01       		.byte	0x1
 1568 0166 34       		.byte	0x34
 1569 0167 E2010000 		.4byte	0x1e2
 1570 016b 05       		.uleb128 0x5
 1571 016c 03       		.byte	0x3
 1572 016d 04000000 		.4byte	UART_1_dataBuffer.4807
 1573 0171 0A       		.uleb128 0xa
 1574 0172 D9010000 		.4byte	.LASF27
 1575 0176 01       		.byte	0x1
 1576 0177 35       		.byte	0x35
 1577 0178 76000000 		.4byte	0x76
 1578 017c 05       		.uleb128 0x5
 1579 017d 03       		.byte	0x3
 1580 017e 08000000 		.4byte	UART_1_bufSizeBuf.4808
 1581 0182 0A       		.uleb128 0xa
 1582 0183 85010000 		.4byte	.LASF28
 1583 0187 01       		.byte	0x1
 1584 0188 36       		.byte	0x36
 1585 0189 76000000 		.4byte	0x76
 1586 018d 05       		.uleb128 0x5
 1587 018e 03       		.byte	0x3
 1588 018f 0A000000 		.4byte	UART_1_protectBuf.4809
 1589 0193 0A       		.uleb128 0xa
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 44


 1590 0194 33000000 		.4byte	.LASF29
 1591 0198 01       		.byte	0x1
 1592 0199 38       		.byte	0x38
 1593 019a 6B000000 		.4byte	0x6b
 1594 019e 05       		.uleb128 0x5
 1595 019f 03       		.byte	0x3
 1596 01a0 00000000 		.4byte	activeAddress.4810
 1597 01a4 0B       		.uleb128 0xb
 1598 01a5 2D010000 		.4byte	.LASF30
 1599 01a9 01       		.byte	0x1
 1600 01aa 39       		.byte	0x39
 1601 01ab 81000000 		.4byte	0x81
 1602 01af 69010000 		.4byte	.LLST7
 1603 01b3 0C       		.uleb128 0xc
 1604 01b4 18010000 		.4byte	.LVL9
 1605 01b8 1B030000 		.4byte	0x31b
 1606 01bc 0C       		.uleb128 0xc
 1607 01bd B2010000 		.4byte	.LVL16
 1608 01c1 1B030000 		.4byte	0x31b
 1609 01c5 0D       		.uleb128 0xd
 1610 01c6 BA010000 		.4byte	.LVL18
 1611 01ca 23030000 		.4byte	0x323
 1612 01ce D8010000 		.4byte	0x1d8
 1613 01d2 0E       		.uleb128 0xe
 1614 01d3 01       		.uleb128 0x1
 1615 01d4 50       		.byte	0x50
 1616 01d5 01       		.uleb128 0x1
 1617 01d6 30       		.byte	0x30
 1618 01d7 00       		.byte	0
 1619 01d8 0C       		.uleb128 0xc
 1620 01d9 C2030000 		.4byte	.LVL47
 1621 01dd 1B030000 		.4byte	0x31b
 1622 01e1 00       		.byte	0
 1623 01e2 07       		.uleb128 0x7
 1624 01e3 04       		.byte	0x4
 1625 01e4 A1000000 		.4byte	0xa1
 1626 01e8 0F       		.uleb128 0xf
 1627 01e9 14030000 		.4byte	.LASF32
 1628 01ed 01       		.byte	0x1
 1629 01ee 2E02     		.2byte	0x22e
 1630 01f0 00000000 		.4byte	.LFB1
 1631 01f4 94020000 		.4byte	.LFE1-.LFB1
 1632 01f8 01       		.uleb128 0x1
 1633 01f9 9C       		.byte	0x9c
 1634 01fa 60020000 		.4byte	0x260
 1635 01fe 10       		.uleb128 0x10
 1636 01ff D3030000 		.4byte	.LASF33
 1637 0203 01       		.byte	0x1
 1638 0204 3102     		.2byte	0x231
 1639 0206 6B000000 		.4byte	0x6b
 1640 020a 05       		.uleb128 0x5
 1641 020b 03       		.byte	0x3
 1642 020c 0C000000 		.4byte	locOffset.4825
 1643 0210 11       		.uleb128 0x11
 1644 0211 9E010000 		.4byte	.LASF23
 1645 0215 01       		.byte	0x1
 1646 0216 3402     		.2byte	0x234
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 45


 1647 0218 81000000 		.4byte	0x81
 1648 021c 93010000 		.4byte	.LLST8
 1649 0220 11       		.uleb128 0x11
 1650 0221 50010000 		.4byte	.LASF20
 1651 0225 01       		.byte	0x1
 1652 0226 3502     		.2byte	0x235
 1653 0228 81000000 		.4byte	0x81
 1654 022c 00020000 		.4byte	.LLST9
 1655 0230 11       		.uleb128 0x11
 1656 0231 43030000 		.4byte	.LASF25
 1657 0235 01       		.byte	0x1
 1658 0236 3602     		.2byte	0x236
 1659 0238 81000000 		.4byte	0x81
 1660 023c 1F020000 		.4byte	.LLST10
 1661 0240 11       		.uleb128 0x11
 1662 0241 9E030000 		.4byte	.LASF24
 1663 0245 01       		.byte	0x1
 1664 0246 3702     		.2byte	0x237
 1665 0248 81000000 		.4byte	0x81
 1666 024c 32020000 		.4byte	.LLST11
 1667 0250 12       		.uleb128 0x12
 1668 0251 48010000 		.4byte	.LVL64
 1669 0255 23030000 		.4byte	0x323
 1670 0259 0E       		.uleb128 0xe
 1671 025a 01       		.uleb128 0x1
 1672 025b 50       		.byte	0x50
 1673 025c 01       		.uleb128 0x1
 1674 025d 30       		.byte	0x30
 1675 025e 00       		.byte	0
 1676 025f 00       		.byte	0
 1677 0260 13       		.uleb128 0x13
 1678 0261 00000000 		.4byte	.LASF34
 1679 0265 03       		.byte	0x3
 1680 0266 3A       		.byte	0x3a
 1681 0267 B7000000 		.4byte	0xb7
 1682 026b 13       		.uleb128 0x13
 1683 026c 19000000 		.4byte	.LASF35
 1684 0270 03       		.byte	0x3
 1685 0271 54       		.byte	0x54
 1686 0272 6B000000 		.4byte	0x6b
 1687 0276 13       		.uleb128 0x13
 1688 0277 72010000 		.4byte	.LASF36
 1689 027b 03       		.byte	0x3
 1690 027c 55       		.byte	0x55
 1691 027d 6B000000 		.4byte	0x6b
 1692 0281 13       		.uleb128 0x13
 1693 0282 F3020000 		.4byte	.LASF37
 1694 0286 04       		.byte	0x4
 1695 0287 1D       		.byte	0x1d
 1696 0288 A1000000 		.4byte	0xa1
 1697 028c 13       		.uleb128 0x13
 1698 028d 00040000 		.4byte	.LASF38
 1699 0291 04       		.byte	0x4
 1700 0292 1E       		.byte	0x1e
 1701 0293 6B000000 		.4byte	0x6b
 1702 0297 13       		.uleb128 0x13
 1703 0298 E9000000 		.4byte	.LASF39
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 46


 1704 029c 04       		.byte	0x4
 1705 029d 21       		.byte	0x21
 1706 029e E2010000 		.4byte	0x1e2
 1707 02a2 13       		.uleb128 0x13
 1708 02a3 EB010000 		.4byte	.LASF40
 1709 02a7 04       		.byte	0x4
 1710 02a8 22       		.byte	0x22
 1711 02a9 76000000 		.4byte	0x76
 1712 02ad 13       		.uleb128 0x13
 1713 02ae AB030000 		.4byte	.LASF41
 1714 02b2 04       		.byte	0x4
 1715 02b3 23       		.byte	0x23
 1716 02b4 76000000 		.4byte	0x76
 1717 02b8 13       		.uleb128 0x13
 1718 02b9 7A030000 		.4byte	.LASF42
 1719 02bd 04       		.byte	0x4
 1720 02be 24       		.byte	0x24
 1721 02bf 76000000 		.4byte	0x76
 1722 02c3 13       		.uleb128 0x13
 1723 02c4 EF030000 		.4byte	.LASF43
 1724 02c8 04       		.byte	0x4
 1725 02c9 25       		.byte	0x25
 1726 02ca 76000000 		.4byte	0x76
 1727 02ce 13       		.uleb128 0x13
 1728 02cf 5A030000 		.4byte	.LASF44
 1729 02d3 04       		.byte	0x4
 1730 02d4 28       		.byte	0x28
 1731 02d5 6B000000 		.4byte	0x6b
 1732 02d9 13       		.uleb128 0x13
 1733 02da 6A030000 		.4byte	.LASF45
 1734 02de 04       		.byte	0x4
 1735 02df 29       		.byte	0x29
 1736 02e0 6B000000 		.4byte	0x6b
 1737 02e4 13       		.uleb128 0x13
 1738 02e5 FC000000 		.4byte	.LASF46
 1739 02e9 04       		.byte	0x4
 1740 02ea 2C       		.byte	0x2c
 1741 02eb E2010000 		.4byte	0x1e2
 1742 02ef 13       		.uleb128 0x13
 1743 02f0 B7000000 		.4byte	.LASF47
 1744 02f4 04       		.byte	0x4
 1745 02f5 2D       		.byte	0x2d
 1746 02f6 76000000 		.4byte	0x76
 1747 02fa 13       		.uleb128 0x13
 1748 02fb BF010000 		.4byte	.LASF48
 1749 02ff 04       		.byte	0x4
 1750 0300 2E       		.byte	0x2e
 1751 0301 76000000 		.4byte	0x76
 1752 0305 13       		.uleb128 0x13
 1753 0306 8C030000 		.4byte	.LASF49
 1754 030a 04       		.byte	0x4
 1755 030b 2F       		.byte	0x2f
 1756 030c 76000000 		.4byte	0x76
 1757 0310 13       		.uleb128 0x13
 1758 0311 10040000 		.4byte	.LASF50
 1759 0315 04       		.byte	0x4
 1760 0316 30       		.byte	0x30
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 47


 1761 0317 76000000 		.4byte	0x76
 1762 031b 14       		.uleb128 0x14
 1763 031c 0F010000 		.4byte	.LASF54
 1764 0320 05       		.byte	0x5
 1765 0321 1005     		.2byte	0x510
 1766 0323 15       		.uleb128 0x15
 1767 0324 04030000 		.4byte	.LASF55
 1768 0328 06       		.byte	0x6
 1769 0329 60       		.byte	0x60
 1770 032a 16       		.uleb128 0x16
 1771 032b 6B000000 		.4byte	0x6b
 1772 032f 00       		.byte	0
 1773 0330 00       		.byte	0
 1774              		.section	.debug_abbrev,"",%progbits
 1775              	.Ldebug_abbrev0:
 1776 0000 01       		.uleb128 0x1
 1777 0001 11       		.uleb128 0x11
 1778 0002 01       		.byte	0x1
 1779 0003 25       		.uleb128 0x25
 1780 0004 0E       		.uleb128 0xe
 1781 0005 13       		.uleb128 0x13
 1782 0006 0B       		.uleb128 0xb
 1783 0007 03       		.uleb128 0x3
 1784 0008 0E       		.uleb128 0xe
 1785 0009 1B       		.uleb128 0x1b
 1786 000a 0E       		.uleb128 0xe
 1787 000b 55       		.uleb128 0x55
 1788 000c 17       		.uleb128 0x17
 1789 000d 11       		.uleb128 0x11
 1790 000e 01       		.uleb128 0x1
 1791 000f 10       		.uleb128 0x10
 1792 0010 17       		.uleb128 0x17
 1793 0011 00       		.byte	0
 1794 0012 00       		.byte	0
 1795 0013 02       		.uleb128 0x2
 1796 0014 24       		.uleb128 0x24
 1797 0015 00       		.byte	0
 1798 0016 0B       		.uleb128 0xb
 1799 0017 0B       		.uleb128 0xb
 1800 0018 3E       		.uleb128 0x3e
 1801 0019 0B       		.uleb128 0xb
 1802 001a 03       		.uleb128 0x3
 1803 001b 0E       		.uleb128 0xe
 1804 001c 00       		.byte	0
 1805 001d 00       		.byte	0
 1806 001e 03       		.uleb128 0x3
 1807 001f 24       		.uleb128 0x24
 1808 0020 00       		.byte	0
 1809 0021 0B       		.uleb128 0xb
 1810 0022 0B       		.uleb128 0xb
 1811 0023 3E       		.uleb128 0x3e
 1812 0024 0B       		.uleb128 0xb
 1813 0025 03       		.uleb128 0x3
 1814 0026 08       		.uleb128 0x8
 1815 0027 00       		.byte	0
 1816 0028 00       		.byte	0
 1817 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 48


 1818 002a 16       		.uleb128 0x16
 1819 002b 00       		.byte	0
 1820 002c 03       		.uleb128 0x3
 1821 002d 0E       		.uleb128 0xe
 1822 002e 3A       		.uleb128 0x3a
 1823 002f 0B       		.uleb128 0xb
 1824 0030 3B       		.uleb128 0x3b
 1825 0031 0B       		.uleb128 0xb
 1826 0032 49       		.uleb128 0x49
 1827 0033 13       		.uleb128 0x13
 1828 0034 00       		.byte	0
 1829 0035 00       		.byte	0
 1830 0036 05       		.uleb128 0x5
 1831 0037 35       		.uleb128 0x35
 1832 0038 00       		.byte	0
 1833 0039 49       		.uleb128 0x49
 1834 003a 13       		.uleb128 0x13
 1835 003b 00       		.byte	0
 1836 003c 00       		.byte	0
 1837 003d 06       		.uleb128 0x6
 1838 003e 16       		.uleb128 0x16
 1839 003f 00       		.byte	0
 1840 0040 03       		.uleb128 0x3
 1841 0041 0E       		.uleb128 0xe
 1842 0042 3A       		.uleb128 0x3a
 1843 0043 0B       		.uleb128 0xb
 1844 0044 3B       		.uleb128 0x3b
 1845 0045 05       		.uleb128 0x5
 1846 0046 49       		.uleb128 0x49
 1847 0047 13       		.uleb128 0x13
 1848 0048 00       		.byte	0
 1849 0049 00       		.byte	0
 1850 004a 07       		.uleb128 0x7
 1851 004b 0F       		.uleb128 0xf
 1852 004c 00       		.byte	0
 1853 004d 0B       		.uleb128 0xb
 1854 004e 0B       		.uleb128 0xb
 1855 004f 49       		.uleb128 0x49
 1856 0050 13       		.uleb128 0x13
 1857 0051 00       		.byte	0
 1858 0052 00       		.byte	0
 1859 0053 08       		.uleb128 0x8
 1860 0054 15       		.uleb128 0x15
 1861 0055 00       		.byte	0
 1862 0056 27       		.uleb128 0x27
 1863 0057 19       		.uleb128 0x19
 1864 0058 00       		.byte	0
 1865 0059 00       		.byte	0
 1866 005a 09       		.uleb128 0x9
 1867 005b 2E       		.uleb128 0x2e
 1868 005c 01       		.byte	0x1
 1869 005d 3F       		.uleb128 0x3f
 1870 005e 19       		.uleb128 0x19
 1871 005f 03       		.uleb128 0x3
 1872 0060 0E       		.uleb128 0xe
 1873 0061 3A       		.uleb128 0x3a
 1874 0062 0B       		.uleb128 0xb
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 49


 1875 0063 3B       		.uleb128 0x3b
 1876 0064 0B       		.uleb128 0xb
 1877 0065 27       		.uleb128 0x27
 1878 0066 19       		.uleb128 0x19
 1879 0067 11       		.uleb128 0x11
 1880 0068 01       		.uleb128 0x1
 1881 0069 12       		.uleb128 0x12
 1882 006a 06       		.uleb128 0x6
 1883 006b 40       		.uleb128 0x40
 1884 006c 18       		.uleb128 0x18
 1885 006d 9642     		.uleb128 0x2116
 1886 006f 19       		.uleb128 0x19
 1887 0070 01       		.uleb128 0x1
 1888 0071 13       		.uleb128 0x13
 1889 0072 00       		.byte	0
 1890 0073 00       		.byte	0
 1891 0074 0A       		.uleb128 0xa
 1892 0075 34       		.uleb128 0x34
 1893 0076 00       		.byte	0
 1894 0077 03       		.uleb128 0x3
 1895 0078 0E       		.uleb128 0xe
 1896 0079 3A       		.uleb128 0x3a
 1897 007a 0B       		.uleb128 0xb
 1898 007b 3B       		.uleb128 0x3b
 1899 007c 0B       		.uleb128 0xb
 1900 007d 49       		.uleb128 0x49
 1901 007e 13       		.uleb128 0x13
 1902 007f 02       		.uleb128 0x2
 1903 0080 18       		.uleb128 0x18
 1904 0081 00       		.byte	0
 1905 0082 00       		.byte	0
 1906 0083 0B       		.uleb128 0xb
 1907 0084 34       		.uleb128 0x34
 1908 0085 00       		.byte	0
 1909 0086 03       		.uleb128 0x3
 1910 0087 0E       		.uleb128 0xe
 1911 0088 3A       		.uleb128 0x3a
 1912 0089 0B       		.uleb128 0xb
 1913 008a 3B       		.uleb128 0x3b
 1914 008b 0B       		.uleb128 0xb
 1915 008c 49       		.uleb128 0x49
 1916 008d 13       		.uleb128 0x13
 1917 008e 02       		.uleb128 0x2
 1918 008f 17       		.uleb128 0x17
 1919 0090 00       		.byte	0
 1920 0091 00       		.byte	0
 1921 0092 0C       		.uleb128 0xc
 1922 0093 898201   		.uleb128 0x4109
 1923 0096 00       		.byte	0
 1924 0097 11       		.uleb128 0x11
 1925 0098 01       		.uleb128 0x1
 1926 0099 31       		.uleb128 0x31
 1927 009a 13       		.uleb128 0x13
 1928 009b 00       		.byte	0
 1929 009c 00       		.byte	0
 1930 009d 0D       		.uleb128 0xd
 1931 009e 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 50


 1932 00a1 01       		.byte	0x1
 1933 00a2 11       		.uleb128 0x11
 1934 00a3 01       		.uleb128 0x1
 1935 00a4 31       		.uleb128 0x31
 1936 00a5 13       		.uleb128 0x13
 1937 00a6 01       		.uleb128 0x1
 1938 00a7 13       		.uleb128 0x13
 1939 00a8 00       		.byte	0
 1940 00a9 00       		.byte	0
 1941 00aa 0E       		.uleb128 0xe
 1942 00ab 8A8201   		.uleb128 0x410a
 1943 00ae 00       		.byte	0
 1944 00af 02       		.uleb128 0x2
 1945 00b0 18       		.uleb128 0x18
 1946 00b1 9142     		.uleb128 0x2111
 1947 00b3 18       		.uleb128 0x18
 1948 00b4 00       		.byte	0
 1949 00b5 00       		.byte	0
 1950 00b6 0F       		.uleb128 0xf
 1951 00b7 2E       		.uleb128 0x2e
 1952 00b8 01       		.byte	0x1
 1953 00b9 3F       		.uleb128 0x3f
 1954 00ba 19       		.uleb128 0x19
 1955 00bb 03       		.uleb128 0x3
 1956 00bc 0E       		.uleb128 0xe
 1957 00bd 3A       		.uleb128 0x3a
 1958 00be 0B       		.uleb128 0xb
 1959 00bf 3B       		.uleb128 0x3b
 1960 00c0 05       		.uleb128 0x5
 1961 00c1 27       		.uleb128 0x27
 1962 00c2 19       		.uleb128 0x19
 1963 00c3 11       		.uleb128 0x11
 1964 00c4 01       		.uleb128 0x1
 1965 00c5 12       		.uleb128 0x12
 1966 00c6 06       		.uleb128 0x6
 1967 00c7 40       		.uleb128 0x40
 1968 00c8 18       		.uleb128 0x18
 1969 00c9 9642     		.uleb128 0x2116
 1970 00cb 19       		.uleb128 0x19
 1971 00cc 01       		.uleb128 0x1
 1972 00cd 13       		.uleb128 0x13
 1973 00ce 00       		.byte	0
 1974 00cf 00       		.byte	0
 1975 00d0 10       		.uleb128 0x10
 1976 00d1 34       		.uleb128 0x34
 1977 00d2 00       		.byte	0
 1978 00d3 03       		.uleb128 0x3
 1979 00d4 0E       		.uleb128 0xe
 1980 00d5 3A       		.uleb128 0x3a
 1981 00d6 0B       		.uleb128 0xb
 1982 00d7 3B       		.uleb128 0x3b
 1983 00d8 05       		.uleb128 0x5
 1984 00d9 49       		.uleb128 0x49
 1985 00da 13       		.uleb128 0x13
 1986 00db 02       		.uleb128 0x2
 1987 00dc 18       		.uleb128 0x18
 1988 00dd 00       		.byte	0
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 51


 1989 00de 00       		.byte	0
 1990 00df 11       		.uleb128 0x11
 1991 00e0 34       		.uleb128 0x34
 1992 00e1 00       		.byte	0
 1993 00e2 03       		.uleb128 0x3
 1994 00e3 0E       		.uleb128 0xe
 1995 00e4 3A       		.uleb128 0x3a
 1996 00e5 0B       		.uleb128 0xb
 1997 00e6 3B       		.uleb128 0x3b
 1998 00e7 05       		.uleb128 0x5
 1999 00e8 49       		.uleb128 0x49
 2000 00e9 13       		.uleb128 0x13
 2001 00ea 02       		.uleb128 0x2
 2002 00eb 17       		.uleb128 0x17
 2003 00ec 00       		.byte	0
 2004 00ed 00       		.byte	0
 2005 00ee 12       		.uleb128 0x12
 2006 00ef 898201   		.uleb128 0x4109
 2007 00f2 01       		.byte	0x1
 2008 00f3 11       		.uleb128 0x11
 2009 00f4 01       		.uleb128 0x1
 2010 00f5 31       		.uleb128 0x31
 2011 00f6 13       		.uleb128 0x13
 2012 00f7 00       		.byte	0
 2013 00f8 00       		.byte	0
 2014 00f9 13       		.uleb128 0x13
 2015 00fa 34       		.uleb128 0x34
 2016 00fb 00       		.byte	0
 2017 00fc 03       		.uleb128 0x3
 2018 00fd 0E       		.uleb128 0xe
 2019 00fe 3A       		.uleb128 0x3a
 2020 00ff 0B       		.uleb128 0xb
 2021 0100 3B       		.uleb128 0x3b
 2022 0101 0B       		.uleb128 0xb
 2023 0102 49       		.uleb128 0x49
 2024 0103 13       		.uleb128 0x13
 2025 0104 3F       		.uleb128 0x3f
 2026 0105 19       		.uleb128 0x19
 2027 0106 3C       		.uleb128 0x3c
 2028 0107 19       		.uleb128 0x19
 2029 0108 00       		.byte	0
 2030 0109 00       		.byte	0
 2031 010a 14       		.uleb128 0x14
 2032 010b 2E       		.uleb128 0x2e
 2033 010c 00       		.byte	0
 2034 010d 3F       		.uleb128 0x3f
 2035 010e 19       		.uleb128 0x19
 2036 010f 03       		.uleb128 0x3
 2037 0110 0E       		.uleb128 0xe
 2038 0111 3A       		.uleb128 0x3a
 2039 0112 0B       		.uleb128 0xb
 2040 0113 3B       		.uleb128 0x3b
 2041 0114 05       		.uleb128 0x5
 2042 0115 27       		.uleb128 0x27
 2043 0116 19       		.uleb128 0x19
 2044 0117 3C       		.uleb128 0x3c
 2045 0118 19       		.uleb128 0x19
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 52


 2046 0119 00       		.byte	0
 2047 011a 00       		.byte	0
 2048 011b 15       		.uleb128 0x15
 2049 011c 2E       		.uleb128 0x2e
 2050 011d 01       		.byte	0x1
 2051 011e 3F       		.uleb128 0x3f
 2052 011f 19       		.uleb128 0x19
 2053 0120 03       		.uleb128 0x3
 2054 0121 0E       		.uleb128 0xe
 2055 0122 3A       		.uleb128 0x3a
 2056 0123 0B       		.uleb128 0xb
 2057 0124 3B       		.uleb128 0x3b
 2058 0125 0B       		.uleb128 0xb
 2059 0126 27       		.uleb128 0x27
 2060 0127 19       		.uleb128 0x19
 2061 0128 3C       		.uleb128 0x3c
 2062 0129 19       		.uleb128 0x19
 2063 012a 00       		.byte	0
 2064 012b 00       		.byte	0
 2065 012c 16       		.uleb128 0x16
 2066 012d 05       		.uleb128 0x5
 2067 012e 00       		.byte	0
 2068 012f 49       		.uleb128 0x49
 2069 0130 13       		.uleb128 0x13
 2070 0131 00       		.byte	0
 2071 0132 00       		.byte	0
 2072 0133 00       		.byte	0
 2073              		.section	.debug_loc,"",%progbits
 2074              	.Ldebug_loc0:
 2075              	.LLST0:
 2076 0000 1E000000 		.4byte	.LVL2
 2077 0004 E0000000 		.4byte	.LVL5
 2078 0008 0100     		.2byte	0x1
 2079 000a 54       		.byte	0x54
 2080 000b 0C010000 		.4byte	.LVL7
 2081 000f 14010000 		.4byte	.LVL8
 2082 0013 0100     		.2byte	0x1
 2083 0015 54       		.byte	0x54
 2084 0016 4C010000 		.4byte	.LVL14
 2085 001a AE010000 		.4byte	.LVL15
 2086 001e 0100     		.2byte	0x1
 2087 0020 52       		.byte	0x52
 2088 0021 BA010000 		.4byte	.LVL18
 2089 0025 FA030000 		.4byte	.LVL50
 2090 0029 0100     		.2byte	0x1
 2091 002b 54       		.byte	0x54
 2092 002c FC030000 		.4byte	.LVL51
 2093 0030 9A040000 		.4byte	.LVL56
 2094 0034 0100     		.2byte	0x1
 2095 0036 54       		.byte	0x54
 2096 0037 00000000 		.4byte	0
 2097 003b 00000000 		.4byte	0
 2098              	.LLST1:
 2099 003f 7A020000 		.4byte	.LVL33
 2100 0043 96020000 		.4byte	.LVL34
 2101 0047 0200     		.2byte	0x2
 2102 0049 32       		.byte	0x32
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 53


 2103 004a 9F       		.byte	0x9f
 2104 004b 96020000 		.4byte	.LVL34
 2105 004f A2020000 		.4byte	.LVL38
 2106 0053 0100     		.2byte	0x1
 2107 0055 51       		.byte	0x51
 2108 0056 A2020000 		.4byte	.LVL38
 2109 005a A4020000 		.4byte	.LVL39
 2110 005e 0600     		.2byte	0x6
 2111 0060 71       		.byte	0x71
 2112 0061 00       		.sleb128 0
 2113 0062 09       		.byte	0x9
 2114 0063 DF       		.byte	0xdf
 2115 0064 1A       		.byte	0x1a
 2116 0065 9F       		.byte	0x9f
 2117 0066 00000000 		.4byte	0
 2118 006a 00000000 		.4byte	0
 2119              	.LLST2:
 2120 006e 06020000 		.4byte	.LVL23
 2121 0072 0C020000 		.4byte	.LVL24
 2122 0076 0200     		.2byte	0x2
 2123 0078 31       		.byte	0x31
 2124 0079 9F       		.byte	0x9f
 2125 007a 22020000 		.4byte	.LVL25
 2126 007e 28020000 		.4byte	.LVL26
 2127 0082 0200     		.2byte	0x2
 2128 0084 30       		.byte	0x30
 2129 0085 9F       		.byte	0x9f
 2130 0086 28020000 		.4byte	.LVL26
 2131 008a 38020000 		.4byte	.LVL29
 2132 008e 0100     		.2byte	0x1
 2133 0090 5C       		.byte	0x5c
 2134 0091 3C020000 		.4byte	.LVL30
 2135 0095 5E020000 		.4byte	.LVL32
 2136 0099 0100     		.2byte	0x1
 2137 009b 5C       		.byte	0x5c
 2138 009c 00000000 		.4byte	0
 2139 00a0 00000000 		.4byte	0
 2140              	.LLST3:
 2141 00a4 D6010000 		.4byte	.LVL19
 2142 00a8 EA010000 		.4byte	.LVL20
 2143 00ac 0100     		.2byte	0x1
 2144 00ae 53       		.byte	0x53
 2145 00af EE010000 		.4byte	.LVL21
 2146 00b3 FC010000 		.4byte	.LVL22
 2147 00b7 0100     		.2byte	0x1
 2148 00b9 51       		.byte	0x51
 2149 00ba FC010000 		.4byte	.LVL22
 2150 00be 0C020000 		.4byte	.LVL24
 2151 00c2 0100     		.2byte	0x1
 2152 00c4 53       		.byte	0x53
 2153 00c5 22020000 		.4byte	.LVL25
 2154 00c9 38020000 		.4byte	.LVL29
 2155 00cd 0100     		.2byte	0x1
 2156 00cf 53       		.byte	0x53
 2157 00d0 3C020000 		.4byte	.LVL30
 2158 00d4 48020000 		.4byte	.LVL31
 2159 00d8 0100     		.2byte	0x1
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 54


 2160 00da 53       		.byte	0x53
 2161 00db 00000000 		.4byte	0
 2162 00df 00000000 		.4byte	0
 2163              	.LLST4:
 2164 00e3 E0000000 		.4byte	.LVL5
 2165 00e7 08010000 		.4byte	.LVL6
 2166 00eb 0100     		.2byte	0x1
 2167 00ed 52       		.byte	0x52
 2168 00ee 14010000 		.4byte	.LVL8
 2169 00f2 17010000 		.4byte	.LVL9-1
 2170 00f6 0100     		.2byte	0x1
 2171 00f8 52       		.byte	0x52
 2172 00f9 1A010000 		.4byte	.LVL10
 2173 00fd 22010000 		.4byte	.LVL11
 2174 0101 0100     		.2byte	0x1
 2175 0103 52       		.byte	0x52
 2176 0104 2E010000 		.4byte	.LVL12
 2177 0108 B1010000 		.4byte	.LVL16-1
 2178 010c 0100     		.2byte	0x1
 2179 010e 52       		.byte	0x52
 2180 010f B4010000 		.4byte	.LVL17
 2181 0113 B9010000 		.4byte	.LVL18-1
 2182 0117 0100     		.2byte	0x1
 2183 0119 52       		.byte	0x52
 2184 011a E2020000 		.4byte	.LVL40
 2185 011e F2020000 		.4byte	.LVL41
 2186 0122 0100     		.2byte	0x1
 2187 0124 53       		.byte	0x53
 2188 0125 84030000 		.4byte	.LVL42
 2189 0129 8E030000 		.4byte	.LVL43
 2190 012d 0100     		.2byte	0x1
 2191 012f 53       		.byte	0x53
 2192 0130 AC030000 		.4byte	.LVL44
 2193 0134 AE030000 		.4byte	.LVL45
 2194 0138 0100     		.2byte	0x1
 2195 013a 53       		.byte	0x53
 2196 013b 00000000 		.4byte	0
 2197 013f 00000000 		.4byte	0
 2198              	.LLST5:
 2199 0143 26000000 		.4byte	.LVL4
 2200 0147 50040000 		.4byte	.LVL53
 2201 014b 0100     		.2byte	0x1
 2202 014d 56       		.byte	0x56
 2203 014e 00000000 		.4byte	0
 2204 0152 00000000 		.4byte	0
 2205              	.LLST6:
 2206 0156 22000000 		.4byte	.LVL3
 2207 015a 54040000 		.4byte	.LVL54
 2208 015e 0100     		.2byte	0x1
 2209 0160 55       		.byte	0x55
 2210 0161 00000000 		.4byte	0
 2211 0165 00000000 		.4byte	0
 2212              	.LLST7:
 2213 0169 02000000 		.4byte	.LVL0
 2214 016d AE030000 		.4byte	.LVL45
 2215 0171 0200     		.2byte	0x2
 2216 0173 31       		.byte	0x31
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 55


 2217 0174 9F       		.byte	0x9f
 2218 0175 AE030000 		.4byte	.LVL45
 2219 0179 B6030000 		.4byte	.LVL46
 2220 017d 0100     		.2byte	0x1
 2221 017f 53       		.byte	0x53
 2222 0180 C4030000 		.4byte	.LVL48
 2223 0184 C6030000 		.4byte	.LVL49
 2224 0188 0100     		.2byte	0x1
 2225 018a 53       		.byte	0x53
 2226 018b 00000000 		.4byte	0
 2227 018f 00000000 		.4byte	0
 2228              	.LLST8:
 2229 0193 16000000 		.4byte	.LVL57
 2230 0197 A4000000 		.4byte	.LVL60
 2231 019b 0200     		.2byte	0x2
 2232 019d 30       		.byte	0x30
 2233 019e 9F       		.byte	0x9f
 2234 019f A4000000 		.4byte	.LVL60
 2235 01a3 FE000000 		.4byte	.LVL61
 2236 01a7 0100     		.2byte	0x1
 2237 01a9 50       		.byte	0x50
 2238 01aa FE000000 		.4byte	.LVL61
 2239 01ae 00010000 		.4byte	.LVL62
 2240 01b2 0100     		.2byte	0x1
 2241 01b4 59       		.byte	0x59
 2242 01b5 00010000 		.4byte	.LVL62
 2243 01b9 44010000 		.4byte	.LVL63
 2244 01bd 0100     		.2byte	0x1
 2245 01bf 50       		.byte	0x50
 2246 01c0 44010000 		.4byte	.LVL63
 2247 01c4 50010000 		.4byte	.LVL65
 2248 01c8 0100     		.2byte	0x1
 2249 01ca 59       		.byte	0x59
 2250 01cb 50010000 		.4byte	.LVL65
 2251 01cf 54010000 		.4byte	.LVL66
 2252 01d3 0200     		.2byte	0x2
 2253 01d5 30       		.byte	0x30
 2254 01d6 9F       		.byte	0x9f
 2255 01d7 54010000 		.4byte	.LVL66
 2256 01db 84010000 		.4byte	.LVL67
 2257 01df 0100     		.2byte	0x1
 2258 01e1 59       		.byte	0x59
 2259 01e2 84010000 		.4byte	.LVL67
 2260 01e6 96010000 		.4byte	.LVL68
 2261 01ea 0100     		.2byte	0x1
 2262 01ec 50       		.byte	0x50
 2263 01ed 96010000 		.4byte	.LVL68
 2264 01f1 28020000 		.4byte	.LVL74
 2265 01f5 0100     		.2byte	0x1
 2266 01f7 59       		.byte	0x59
 2267 01f8 00000000 		.4byte	0
 2268 01fc 00000000 		.4byte	0
 2269              	.LLST9:
 2270 0200 F2010000 		.4byte	.LVL70
 2271 0204 0C020000 		.4byte	.LVL71
 2272 0208 0200     		.2byte	0x2
 2273 020a 32       		.byte	0x32
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 56


 2274 020b 9F       		.byte	0x9f
 2275 020c 0C020000 		.4byte	.LVL71
 2276 0210 10020000 		.4byte	.LVL73
 2277 0214 0100     		.2byte	0x1
 2278 0216 53       		.byte	0x53
 2279 0217 00000000 		.4byte	0
 2280 021b 00000000 		.4byte	0
 2281              	.LLST10:
 2282 021f 1A000000 		.4byte	.LVL58
 2283 0223 0E020000 		.4byte	.LVL72
 2284 0227 0100     		.2byte	0x1
 2285 0229 54       		.byte	0x54
 2286 022a 00000000 		.4byte	0
 2287 022e 00000000 		.4byte	0
 2288              	.LLST11:
 2289 0232 1E000000 		.4byte	.LVL59
 2290 0236 A4010000 		.4byte	.LVL69
 2291 023a 0100     		.2byte	0x1
 2292 023c 55       		.byte	0x55
 2293 023d 00000000 		.4byte	0
 2294 0241 00000000 		.4byte	0
 2295              		.section	.debug_aranges,"",%progbits
 2296 0000 24000000 		.4byte	0x24
 2297 0004 0200     		.2byte	0x2
 2298 0006 00000000 		.4byte	.Ldebug_info0
 2299 000a 04       		.byte	0x4
 2300 000b 00       		.byte	0
 2301 000c 0000     		.2byte	0
 2302 000e 0000     		.2byte	0
 2303 0010 00000000 		.4byte	.LFB0
 2304 0014 08050000 		.4byte	.LFE0-.LFB0
 2305 0018 00000000 		.4byte	.LFB1
 2306 001c 94020000 		.4byte	.LFE1-.LFB1
 2307 0020 00000000 		.4byte	0
 2308 0024 00000000 		.4byte	0
 2309              		.section	.debug_ranges,"",%progbits
 2310              	.Ldebug_ranges0:
 2311 0000 00000000 		.4byte	.LFB0
 2312 0004 08050000 		.4byte	.LFE0
 2313 0008 00000000 		.4byte	.LFB1
 2314 000c 94020000 		.4byte	.LFE1
 2315 0010 00000000 		.4byte	0
 2316 0014 00000000 		.4byte	0
 2317              		.section	.debug_line,"",%progbits
 2318              	.Ldebug_line0:
 2319 0000 AC020000 		.section	.debug_str,"MS",%progbits,1
 2319      0200A300 
 2319      00000201 
 2319      FB0E0D00 
 2319      01010101 
 2320              	.LASF34:
 2321 0000 55415254 		.ascii	"UART_1_customIntrHandler\000"
 2321      5F315F63 
 2321      7573746F 
 2321      6D496E74 
 2321      7248616E 
 2322              	.LASF35:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 57


 2323 0019 55415254 		.ascii	"UART_1_numberOfAddr\000"
 2323      5F315F6E 
 2323      756D6265 
 2323      724F6641 
 2323      64647200 
 2324              	.LASF15:
 2325 002d 72656733 		.ascii	"reg32\000"
 2325      3200
 2326              	.LASF29:
 2327 0033 61637469 		.ascii	"activeAddress\000"
 2327      76654164 
 2327      64726573 
 2327      7300
 2328              	.LASF53:
 2329 0041 433A5C55 		.ascii	"C:\\Users\\Marcelo\\Documents\\Proyecto_Tesis\\tabl"
 2329      73657273 
 2329      5C4D6172 
 2329      63656C6F 
 2329      5C446F63 
 2330 006f 65726F5F 		.ascii	"ero_hogar\\Psoc_Creator\\Data Exchange MT174\\Inter"
 2330      686F6761 
 2330      725C5073 
 2330      6F635F43 
 2330      72656174 
 2331 009f 66616365 		.ascii	"face_driver.cydsn\000"
 2331      5F647269 
 2331      7665722E 
 2331      63796473 
 2331      6E00
 2332              	.LASF12:
 2333 00b1 666C6F61 		.ascii	"float\000"
 2333      7400
 2334              	.LASF47:
 2335 00b7 55415254 		.ascii	"UART_1_bufSizeBuf2\000"
 2335      5F315F62 
 2335      75665369 
 2335      7A654275 
 2335      663200
 2336              	.LASF3:
 2337 00ca 73686F72 		.ascii	"short unsigned int\000"
 2337      7420756E 
 2337      7369676E 
 2337      65642069 
 2337      6E7400
 2338              	.LASF21:
 2339 00dd 656E6454 		.ascii	"endTransfer\000"
 2339      72616E73 
 2339      66657200 
 2340              	.LASF39:
 2341 00e9 55415254 		.ascii	"UART_1_dataBuffer1\000"
 2341      5F315F64 
 2341      61746142 
 2341      75666665 
 2341      723100
 2342              	.LASF46:
 2343 00fc 55415254 		.ascii	"UART_1_dataBuffer2\000"
 2343      5F315F64 
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 58


 2343      61746142 
 2343      75666665 
 2343      723200
 2344              	.LASF54:
 2345 010f 55415254 		.ascii	"UART_1_I2CSlaveNackGeneration\000"
 2345      5F315F49 
 2345      3243536C 
 2345      6176654E 
 2345      61636B47 
 2346              	.LASF30:
 2347 012d 61636B52 		.ascii	"ackResponse\000"
 2347      6573706F 
 2347      6E736500 
 2348              	.LASF19:
 2349 0139 6C6F6349 		.ascii	"locIndex\000"
 2349      6E646578 
 2349      00
 2350              	.LASF1:
 2351 0142 756E7369 		.ascii	"unsigned char\000"
 2351      676E6564 
 2351      20636861 
 2351      7200
 2352              	.LASF20:
 2353 0150 6C6F6353 		.ascii	"locStatus\000"
 2353      74617475 
 2353      7300
 2354              	.LASF5:
 2355 015a 6C6F6E67 		.ascii	"long unsigned int\000"
 2355      20756E73 
 2355      69676E65 
 2355      6420696E 
 2355      7400
 2356              	.LASF9:
 2357 016c 75696E74 		.ascii	"uint8\000"
 2357      3800
 2358              	.LASF36:
 2359 0172 55415254 		.ascii	"UART_1_subAddrSize\000"
 2359      5F315F73 
 2359      75624164 
 2359      64725369 
 2359      7A6500
 2360              	.LASF28:
 2361 0185 55415254 		.ascii	"UART_1_protectBuf\000"
 2361      5F315F70 
 2361      726F7465 
 2361      63744275 
 2361      6600
 2362              	.LASF13:
 2363 0197 646F7562 		.ascii	"double\000"
 2363      6C6500
 2364              	.LASF23:
 2365 019e 6C6F6342 		.ascii	"locByte\000"
 2365      79746500 
 2366              	.LASF31:
 2367 01a6 55415254 		.ascii	"UART_1_EZI2C_STRETCH_ISR\000"
 2367      5F315F45 
 2367      5A493243 
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 59


 2367      5F535452 
 2367      45544348 
 2368              	.LASF48:
 2369 01bf 55415254 		.ascii	"UART_1_protectBuf2\000"
 2369      5F315F70 
 2369      726F7465 
 2369      63744275 
 2369      663200
 2370              	.LASF10:
 2371 01d2 75696E74 		.ascii	"uint16\000"
 2371      313600
 2372              	.LASF27:
 2373 01d9 55415254 		.ascii	"UART_1_bufSizeBuf\000"
 2373      5F315F62 
 2373      75665369 
 2373      7A654275 
 2373      6600
 2374              	.LASF40:
 2375 01eb 55415254 		.ascii	"UART_1_bufSizeBuf1\000"
 2375      5F315F62 
 2375      75665369 
 2375      7A654275 
 2375      663100
 2376              	.LASF11:
 2377 01fe 75696E74 		.ascii	"uint32\000"
 2377      333200
 2378              	.LASF8:
 2379 0205 756E7369 		.ascii	"unsigned int\000"
 2379      676E6564 
 2379      20696E74 
 2379      00
 2380              	.LASF18:
 2381 0212 6C6F6342 		.ascii	"locBufSize\000"
 2381      75665369 
 2381      7A6500
 2382              	.LASF22:
 2383 021d 6669666F 		.ascii	"fifoIndex\000"
 2383      496E6465 
 2383      7800
 2384              	.LASF7:
 2385 0227 6C6F6E67 		.ascii	"long long unsigned int\000"
 2385      206C6F6E 
 2385      6720756E 
 2385      7369676E 
 2385      65642069 
 2386              	.LASF52:
 2387 023e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1_EZI2C_INT.c\000"
 2387      6E657261 
 2387      7465645F 
 2387      536F7572 
 2387      63655C50 
 2388              	.LASF51:
 2389 026a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2389      4320342E 
 2389      382E3420 
 2389      32303134 
 2389      30353236 
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 60


 2390 029d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2390      20726576 
 2390      6973696F 
 2390      6E203231 
 2390      31333538 
 2391 02d0 67202D66 		.ascii	"g -ffunction-sections\000"
 2391      66756E63 
 2391      74696F6E 
 2391      2D736563 
 2391      74696F6E 
 2392              	.LASF16:
 2393 02e6 63796973 		.ascii	"cyisraddress\000"
 2393      72616464 
 2393      72657373 
 2393      00
 2394              	.LASF37:
 2395 02f3 55415254 		.ascii	"UART_1_curStatus\000"
 2395      5F315F63 
 2395      75725374 
 2395      61747573 
 2395      00
 2396              	.LASF55:
 2397 0304 43794861 		.ascii	"CyHalt\000"
 2397      6C7400
 2398              	.LASF17:
 2399 030b 73697A65 		.ascii	"sizetype\000"
 2399      74797065 
 2399      00
 2400              	.LASF32:
 2401 0314 55415254 		.ascii	"UART_1_EZI2C_NO_STRETCH_ISR\000"
 2401      5F315F45 
 2401      5A493243 
 2401      5F4E4F5F 
 2401      53545245 
 2402              	.LASF6:
 2403 0330 6C6F6E67 		.ascii	"long long int\000"
 2403      206C6F6E 
 2403      6720696E 
 2403      7400
 2404              	.LASF14:
 2405 033e 63686172 		.ascii	"char\000"
 2405      00
 2406              	.LASF25:
 2407 0343 6C6F6349 		.ascii	"locIntrSlave\000"
 2407      6E747253 
 2407      6C617665 
 2407      00
 2408              	.LASF2:
 2409 0350 73686F72 		.ascii	"short int\000"
 2409      7420696E 
 2409      7400
 2410              	.LASF44:
 2411 035a 55415254 		.ascii	"UART_1_addrBuf1\000"
 2411      5F315F61 
 2411      64647242 
 2411      75663100 
 2412              	.LASF45:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 61


 2413 036a 55415254 		.ascii	"UART_1_addrBuf2\000"
 2413      5F315F61 
 2413      64647242 
 2413      75663200 
 2414              	.LASF42:
 2415 037a 55415254 		.ascii	"UART_1_offsetBuf1\000"
 2415      5F315F6F 
 2415      66667365 
 2415      74427566 
 2415      3100
 2416              	.LASF49:
 2417 038c 55415254 		.ascii	"UART_1_offsetBuf2\000"
 2417      5F315F6F 
 2417      66667365 
 2417      74427566 
 2417      3200
 2418              	.LASF24:
 2419 039e 6C6F6349 		.ascii	"locIntrCause\000"
 2419      6E747243 
 2419      61757365 
 2419      00
 2420              	.LASF41:
 2421 03ab 55415254 		.ascii	"UART_1_protectBuf1\000"
 2421      5F315F70 
 2421      726F7465 
 2421      63744275 
 2421      663100
 2422              	.LASF4:
 2423 03be 6C6F6E67 		.ascii	"long int\000"
 2423      20696E74 
 2423      00
 2424              	.LASF0:
 2425 03c7 7369676E 		.ascii	"signed char\000"
 2425      65642063 
 2425      68617200 
 2426              	.LASF33:
 2427 03d3 6C6F634F 		.ascii	"locOffset\000"
 2427      66667365 
 2427      7400
 2428              	.LASF26:
 2429 03dd 55415254 		.ascii	"UART_1_dataBuffer\000"
 2429      5F315F64 
 2429      61746142 
 2429      75666665 
 2429      7200
 2430              	.LASF43:
 2431 03ef 55415254 		.ascii	"UART_1_indexBuf1\000"
 2431      5F315F69 
 2431      6E646578 
 2431      42756631 
 2431      00
 2432              	.LASF38:
 2433 0400 55415254 		.ascii	"UART_1_fsmState\000"
 2433      5F315F66 
 2433      736D5374 
 2433      61746500 
 2434              	.LASF50:
ARM GAS  C:\Users\Marcelo\AppData\Local\Temp\ccLsjeAQ.s 			page 62


 2435 0410 55415254 		.ascii	"UART_1_indexBuf2\000"
 2435      5F315F69 
 2435      6E646578 
 2435      42756632 
 2435      00
 2436              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
